{"ast":null,"code":"var _jsxFileName = \"/home/fsat/repos/magboard/frontend/src/ui/AppTools.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport DrawMode from '../pitch/DrawMode';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\nimport MovieCreationIcon from '@material-ui/icons/MovieCreation';\nimport LinkIcon from '@material-ui/icons/Link';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport TextFieldsIcon from '@material-ui/icons/TextFields';\nimport { CursorDefault, VectorLine, ShapeSquarePlus, ShapeOvalPlus } from 'mdi-material-ui';\nimport DrawMenu from './DrawMenu';\nimport PaletteDialog from './PaletteDialog';\nimport FullscreenToggle from './FullscreenToggle'; // this is for custom position classes\n\nconst styles = theme => ({\n  grow: {\n    flexGrow: 1\n  }\n});\n\nclass AppTools extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      drawerOpen: false\n    };\n    this.toggleDrawer = this.toggleDrawer.bind(this); // Drawing menu\n\n    this._refDrawMenu = /*#__PURE__*/React.createRef();\n    this._refOpenDrawMenu = /*#__PURE__*/React.createRef();\n    this.drawingModeIcon = this.drawingModeIcon.bind(this);\n    this.drawMenuAnchorEl = this.drawMenuAnchorEl.bind(this);\n    this.drawMenuOpen = this.drawMenuOpen.bind(this);\n    this.createNewScheme = this.createNewScheme.bind(this);\n    this.createNewAnimation = this.createNewAnimation.bind(this); // palette dialog\n\n    this._refPaletteDialog = /*#__PURE__*/React.createRef();\n    this.paletteDialogRef = this.paletteDialogRef.bind(this);\n  }\n\n  setDrawer(isOpen) {\n    this.setState({\n      drawerOpen: isOpen\n    });\n  }\n\n  toggleDrawer(e) {\n    if (e.type === 'keydown' && (e.key === 'Tab' || e.key === 'Shift')) {\n      return;\n    }\n\n    this.setDrawer(!this.state.drawerOpen);\n  }\n\n  createNewScheme() {\n    this.setDrawer(false);\n    this.props.createNewScheme();\n  }\n\n  createNewAnimation() {\n    this.setDrawer(false);\n    this.props.createNewAnimation();\n  }\n\n  drawMenuAnchorEl() {\n    return this._refOpenDrawMenu.current;\n  }\n\n  drawMenuOpen() {\n    this._refDrawMenu.current.open();\n  }\n\n  drawingModeIcon() {\n    switch (this.props.drawMode.mode) {\n      case 'line':\n        return /*#__PURE__*/React.createElement(VectorLine, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }\n        });\n\n      case 'square':\n        return /*#__PURE__*/React.createElement(ShapeSquarePlus, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }\n        });\n\n      case 'ellipse':\n        return /*#__PURE__*/React.createElement(ShapeOvalPlus, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }\n        });\n\n      case 'text':\n        return /*#__PURE__*/React.createElement(TextFieldsIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }\n        });\n\n      case 'select':\n      default:\n        return /*#__PURE__*/React.createElement(CursorDefault, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }\n        });\n    }\n  }\n\n  paletteDialogRef() {\n    return this._refPaletteDialog.current;\n  }\n\n  render() {\n    const drawingModeIcon = this.drawingModeIcon();\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(AppBar, {\n      position: \"fixed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Toolbar, {\n      variant: \"regular\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      edge: \"start\",\n      color: \"inherit\",\n      \"aria-label\": \"menu\",\n      onClick: this.toggleDrawer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MenuIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 8\n      }\n    })), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      color: \"inherit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }\n    }, \"Futsal tactics board\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: this.props.classes.grow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"Selected draw mode\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      ref: this._refOpenDrawMenu,\n      \"aria-label\": \"Selected draw mode\",\n      color: \"inherit\",\n      onClick: this.drawMenuOpen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 8\n      }\n    }, drawingModeIcon)), /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"Save picture\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"Save picture\",\n      color: \"inherit\",\n      onClick: this.props.saveImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(GetAppIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }))), /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"Share link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"Share link\",\n      color: \"inherit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(LinkIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }\n    }))), /*#__PURE__*/React.createElement(FullscreenToggle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 7\n      }\n    }))), /*#__PURE__*/React.createElement(Drawer, {\n      anchor: \"left\",\n      open: this.state.drawerOpen,\n      onClose: this.toggleDrawer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      p: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h4\",\n      component: \"h2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 7\n      }\n    }, \"Tactics board\"), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(List, {\n      component: \"nav\",\n      \"aria-label\": \"main mailbox folders\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ListItem, {\n      button: true,\n      onClick: this.createNewScheme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(ListItemIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(OpenInNewIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 10\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      primary: \"Create new scheme\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(ListItem, {\n      button: true,\n      onClick: this.createNewAnimation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(ListItemIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(MovieCreationIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 10\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      primary: \"Create new animation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }\n    }))))), /*#__PURE__*/React.createElement(DrawMenu, {\n      ref: this._refDrawMenu,\n      anchorEl: this.drawMenuAnchorEl,\n      drawMode: this.props.drawMode,\n      paletteDialogRef: this.paletteDialogRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(PaletteDialog, {\n      ref: this._refPaletteDialog,\n      drawMode: this.props.drawMode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}\n\nAppTools.defaultProps = {\n  drawMode: null,\n  saveImage: null,\n  createNewScheme: null,\n  createNewAnimation: null\n};\nAppTools.propTypes = {\n  drawMode: PropTypes.instanceOf(DrawMode),\n  saveImage: PropTypes.func,\n  createNewScheme: PropTypes.func,\n  createNewAnimation: PropTypes.func\n};\nexport default withStyles(styles, {\n  withTheme: true\n})(AppTools);","map":{"version":3,"sources":["/home/fsat/repos/magboard/frontend/src/ui/AppTools.js"],"names":["React","Component","PropTypes","DrawMode","withStyles","AppBar","Toolbar","Typography","IconButton","MenuIcon","Divider","Drawer","Box","List","ListItem","ListItemIcon","ListItemText","Tooltip","OpenInNewIcon","MovieCreationIcon","LinkIcon","GetAppIcon","TextFieldsIcon","CursorDefault","VectorLine","ShapeSquarePlus","ShapeOvalPlus","DrawMenu","PaletteDialog","FullscreenToggle","styles","theme","grow","flexGrow","AppTools","constructor","props","state","drawerOpen","toggleDrawer","bind","_refDrawMenu","createRef","_refOpenDrawMenu","drawingModeIcon","drawMenuAnchorEl","drawMenuOpen","createNewScheme","createNewAnimation","_refPaletteDialog","paletteDialogRef","setDrawer","isOpen","setState","e","type","key","current","open","drawMode","mode","render","classes","saveImage","defaultProps","propTypes","instanceOf","func","withTheme"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport DrawMode from '../pitch/DrawMode';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\nimport MovieCreationIcon from '@material-ui/icons/MovieCreation';\nimport LinkIcon from '@material-ui/icons/Link';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport TextFieldsIcon from '@material-ui/icons/TextFields';\nimport { CursorDefault, VectorLine, ShapeSquarePlus, ShapeOvalPlus } from 'mdi-material-ui';\nimport DrawMenu from './DrawMenu';\nimport PaletteDialog from './PaletteDialog';\nimport FullscreenToggle from './FullscreenToggle';\n\n// this is for custom position classes\nconst styles = theme => ({\n\tgrow: {\n\t\tflexGrow: 1,\n\t},\n});\n\nclass AppTools extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdrawerOpen: false\n\t\t}\n\t\tthis.toggleDrawer = this.toggleDrawer.bind(this);\n\n\t\t// Drawing menu\n\t\tthis._refDrawMenu = React.createRef();\n\t\tthis._refOpenDrawMenu = React.createRef();\n\t\tthis.drawingModeIcon = this.drawingModeIcon.bind(this);\n\t\tthis.drawMenuAnchorEl = this.drawMenuAnchorEl.bind(this);\n\t\tthis.drawMenuOpen = this.drawMenuOpen.bind(this);\n\t\tthis.createNewScheme = this.createNewScheme.bind(this);\n\t\tthis.createNewAnimation = this.createNewAnimation.bind(this);\n\n\t\t// palette dialog\n\t\tthis._refPaletteDialog = React.createRef();\n\t\tthis.paletteDialogRef = this.paletteDialogRef.bind(this);\n\t}\n\n\tsetDrawer(isOpen) {\n\t\tthis.setState({\n\t\t\tdrawerOpen:isOpen\n\t\t});\n\t}\n\n\ttoggleDrawer(e) {\n\t\tif (e.type === 'keydown' && (e.key === 'Tab' || e.key === 'Shift')) {\n\t\t\treturn;\n\t\t}\n\t\tthis.setDrawer(!this.state.drawerOpen);\n\t}\n\n\tcreateNewScheme() {\n\t\tthis.setDrawer(false);\n\t\tthis.props.createNewScheme();\n\t}\n\n\tcreateNewAnimation() {\n\t\tthis.setDrawer(false);\n\t\tthis.props.createNewAnimation();\n\t}\n\n\tdrawMenuAnchorEl() {\n\t\treturn this._refOpenDrawMenu.current;\n\t}\n\n\tdrawMenuOpen() {\n\t\tthis._refDrawMenu.current.open();\n\t}\n\n\tdrawingModeIcon() {\n\t\tswitch (this.props.drawMode.mode) {\n\t\t\tcase 'line':\n\t\t\t\treturn (<VectorLine />);\n\t\t\tcase 'square':\n\t\t\t\treturn (<ShapeSquarePlus />);\n\t\t\tcase 'ellipse':\n\t\t\t\treturn (<ShapeOvalPlus />);\n\t\t\tcase 'text':\n\t\t\t\treturn (<TextFieldsIcon />);\n\t\t\tcase 'select':\n\t\t\tdefault:\n\t\t\t\treturn (<CursorDefault />);\n\t\t}\n\t}\n\n\tpaletteDialogRef() {\n\t\treturn this._refPaletteDialog.current;\n\t}\n\n\trender() {\n\t\tconst drawingModeIcon = this.drawingModeIcon();\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<AppBar position=\"fixed\">\n\t\t\t\t\t<Toolbar variant=\"regular\">\n\t\t\t\t\t\t<IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={this.toggleDrawer}>\n\t\t\t\t\t\t\t<MenuIcon />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t<Typography variant=\"h6\" color=\"inherit\">Futsal tactics board</Typography>\n\t\t\t\t\t\t<div className={this.props.classes.grow} />\n\t\t\t\t\t\t<Tooltip title=\"Selected draw mode\">\n\t\t\t\t\t\t\t<IconButton ref={this._refOpenDrawMenu} aria-label=\"Selected draw mode\" color=\"inherit\" onClick={this.drawMenuOpen}>\n\t\t\t\t\t\t\t\t{drawingModeIcon}\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t<Tooltip title=\"Save picture\">\n\t\t\t\t\t\t\t<IconButton aria-label=\"Save picture\" color=\"inherit\" onClick={this.props.saveImage}>\n\t\t\t\t\t\t\t\t<GetAppIcon />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t<Tooltip title=\"Share link\">\n\t\t\t\t\t\t\t<IconButton aria-label=\"Share link\" color=\"inherit\">\n\t\t\t\t\t\t\t\t<LinkIcon />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t<FullscreenToggle />\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</AppBar>\n\t\t\t\t<Drawer anchor=\"left\" open={this.state.drawerOpen} onClose={this.toggleDrawer}>\n\t\t\t\t\t<Box p={2}>\n\t\t\t\t\t\t<Typography variant=\"h4\" component=\"h2\">Tactics board</Typography>\n\t\t\t\t\t\t<Divider />\n\t\t\t\t\t\t<List component=\"nav\" aria-label=\"main mailbox folders\">\n\t\t\t\t\t\t\t<ListItem button onClick={this.createNewScheme}>\n\t\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t\t<OpenInNewIcon />\n\t\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t\t<ListItemText primary=\"Create new scheme\" />\n\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t<ListItem button onClick={this.createNewAnimation}>\n\t\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t\t<MovieCreationIcon />\n\t\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t\t<ListItemText primary=\"Create new animation\" />\n\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t</List>\n\t\t\t\t\t</Box>\n\t\t\t\t</Drawer>\n\t\t\t\t<DrawMenu ref={this._refDrawMenu} anchorEl={this.drawMenuAnchorEl} drawMode={this.props.drawMode} paletteDialogRef={this.paletteDialogRef} />\n\t\t\t\t<PaletteDialog ref={this._refPaletteDialog} drawMode={this.props.drawMode} />\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nAppTools.defaultProps = {\n\tdrawMode: null,\n\tsaveImage: null,\n\tcreateNewScheme: null,\n\tcreateNewAnimation: null\n}\n\nAppTools.propTypes = {\n\tdrawMode: PropTypes.instanceOf(DrawMode),\n\tsaveImage: PropTypes.func,\n\tcreateNewScheme: PropTypes.func,\n\tcreateNewAnimation: PropTypes.func\n}\n\nexport default withStyles(styles, { withTheme: true })(AppTools);"]},"metadata":{},"sourceType":"module"}