{"ast":null,"code":"import Box from './Box';\n\nclass Square {\n  constructor(id = \"\", color = 0, x1 = 0, y1 = 0, width = 0, height = 0, rotation = 0, dashed = false, isEdit = false) {\n    this.id = id;\n    this.color = color;\n    this.x1 = x1;\n    this.y1 = y1;\n    this.x2 = x1 + width;\n    this.y2 = y1 + height;\n    this.rotation = rotation;\n    this.dashed = dashed;\n    this.isEdit = isEdit;\n  }\n\n  get box() {\n    return new Box(this.id, this.x, this.y, this.width, this.height);\n  }\n\n  get x() {\n    return this.x1 < this.x2 ? this.x1 : this.x2;\n  }\n\n  get width() {\n    return this.x1 < this.x2 ? this.x2 - this.x1 : this.x1 - this.x2;\n  }\n\n  get y() {\n    return this.y1 < this.y2 ? this.y1 : this.y2;\n  }\n\n  get height() {\n    return this.y1 < this.y2 ? this.y2 - this.y1 : this.y1 - this.y2;\n  }\n\n  get cx() {\n    return this.x + this.width / 2;\n  }\n\n  get cy() {\n    return this.y + this.height / 2;\n  }\n\n  resize(x2, y2, proportional) {\n    this.x2 = x2;\n\n    if (!proportional) {\n      this.y2 = y2;\n    } else {\n      let szy = this.width * (this.y1 < y2 ? 1 : -1);\n      this.y2 = this.y1 + szy;\n    }\n  }\n\n  edit(corner, deltaX, deltaY) {\n    switch (corner) {\n      case \"tl\":\n        this.x1 += deltaX;\n        this.y1 += deltaY;\n        break;\n\n      case \"tr\":\n        this.x2 += deltaX;\n        this.y1 += deltaY;\n        break;\n\n      case \"bl\":\n        this.x1 += deltaX;\n        this.y2 += deltaY;\n        break;\n\n      case \"br\":\n        this.x2 += deltaX;\n        this.y2 += deltaY;\n        break;\n\n      case \"mv\":\n        this.x1 += deltaX;\n        this.y1 += deltaY;\n        this.x2 += deltaX;\n        this.y2 += deltaY;\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  rotate(posX, posY, snap) {\n    let vx = posX - this.cx;\n    let vy = posY - this.cy;\n    let angle = Math.atan2(vy, vx) * 180 / Math.PI;\n    angle += 90;\n\n    if (angle < 0) {\n      angle += 360;\n    }\n\n    if (snap) {\n      angle = Math.floor(angle / 45) * 45;\n    }\n\n    this.rotation = angle;\n  }\n\n}\n\nexport default Square;","map":{"version":3,"sources":["/home/fsat/repos/tactics-board/src/pitch/Square.js"],"names":["Box","Square","constructor","id","color","x1","y1","width","height","rotation","dashed","isEdit","x2","y2","box","x","y","cx","cy","resize","proportional","szy","edit","corner","deltaX","deltaY","rotate","posX","posY","snap","vx","vy","angle","Math","atan2","PI","floor"],"mappings":"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","sourcesContent":["import Box from './Box';\n\nclass Square {\n\tconstructor(id=\"\", color=0, x1=0, y1=0, width=0, height=0, rotation=0, dashed=false, isEdit=false){\n\t\tthis.id = id;\n\t\tthis.color = color;\n\t\tthis.x1 = x1;\n\t\tthis.y1 = y1;\n\t\tthis.x2 = x1 + width;\n\t\tthis.y2 = y1 + height;\n\t\tthis.rotation = rotation;\n\t\tthis.dashed = dashed;\n\t\tthis.isEdit = isEdit;\n\t}\n\n\tget box() {\n\t\treturn new Box(\n\t\t\tthis.id,\n\t\t\tthis.x,\n\t\t\tthis.y,\n\t\t\tthis.width,\n\t\t\tthis.height\n\t\t);\n\t}\n\n\tget x() {\n\t\treturn this.x1 < this.x2 ? this.x1 : this.x2;\n\t}\n\n\tget width() {\n\t\treturn this.x1 < this.x2 ? this.x2 - this.x1 : this.x1 - this.x2;\n\t}\n\n\tget y() {\n\t\treturn this.y1 < this.y2 ? this.y1 : this.y2;\n\t}\n\n\tget height() {\n\t\treturn this.y1 < this.y2 ? this.y2 - this.y1 : this.y1 - this.y2;\n\t}\n\n\tget cx() {\n\t\treturn this.x + this.width / 2;\n\t}\n\n\tget cy() {\n\t\treturn this.y + this.height / 2;\n\t}\n\n\tresize(x2, y2, proportional) {\n\t\tthis.x2 = x2;\n\t\tif (!proportional) {\n\t\t\tthis.y2 = y2;\n\t\t} else {\n\t\t\tlet szy = this.width * (this.y1 < y2 ? 1 : -1);\n\t\t\tthis.y2 = this.y1 + szy;\n\t\t}\n\t}\n\n\tedit(corner, deltaX, deltaY) {\n\t\tswitch (corner) {\n\t\t\tcase \"tl\":\n\t\t\t\tthis.x1 += deltaX;\n\t\t\t\tthis.y1 += deltaY;\n\t\t\t\tbreak;\n\t\t\tcase \"tr\":\n\t\t\t\tthis.x2 += deltaX;\n\t\t\t\tthis.y1 += deltaY;\n\t\t\t\tbreak;\n\t\t\tcase \"bl\":\n\t\t\t\tthis.x1 += deltaX;\n\t\t\t\tthis.y2 += deltaY;\n\t\t\t\tbreak;\n\t\t\tcase \"br\":\n\t\t\t\tthis.x2 += deltaX;\n\t\t\t\tthis.y2 += deltaY;\n\t\t\t\tbreak;\n\t\t\tcase \"mv\":\n\t\t\t\tthis.x1 += deltaX;\n\t\t\t\tthis.y1 += deltaY;\n\t\t\t\tthis.x2 += deltaX;\n\t\t\t\tthis.y2 += deltaY;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\trotate(posX, posY, snap) {\n\t\tlet vx = posX - this.cx;\n\t\tlet vy = posY - this.cy;\n\t\tlet angle = Math.atan2(vy, vx) * 180 / Math.PI;\n\t\tangle += 90;\n\t\tif (angle < 0) {\n\t\t\tangle += 360;\n\t\t}\n\t\tif (snap) {\n\t\t\tangle = Math.floor(angle / 45) * 45;\n\t\t}\n\t\tthis.rotation = angle;\n\t}\n}\n\nexport default Square;\n"]},"metadata":{},"sourceType":"module"}