{"ast":null,"code":"var _jsxFileName = \"/home/fsat/repos/tactics-board/src/editors/SvgToImg.js\";\nimport React, { Component } from 'react';\nimport FileSaver from 'browser-filesaver';\n\nclass SvgToImg extends Component {\n  constructor(props) {\n    super(props);\n    this._refRenderer = /*#__PURE__*/React.createRef();\n  } // create image from svg text\n\n\n  toImg(svgText, orgWidth, orgHeight, imgWidth, imgHeight) {\n    // Create Canvas\n    let canvas = document.createElement('canvas');\n    canvas.width = imgWidth;\n    canvas.height = imgHeight;\n    let ctx = canvas.getContext(\"2d\"); // show canvas\n    //this._refRenderer.current.appendChild(canvas);\n    // Create image\n\n    let img = document.createElement('img'); // when loaded draw and save\n\n    img.addEventListener('load', e => {\n      // draw image\n      ctx.drawImage(img, 0, 0, orgWidth, orgHeight, //0, 0, imgWidth, imgHeight\n      0, 0, orgWidth, orgHeight); // save image\n\n      canvas.toBlob(function (blob) {\n        FileSaver.saveAs(blob, \"tactics-board.png\");\n      }); // clear everything\n\n      this._refRenderer.current.innerHTML = '';\n    }); // prepare svg to load image\n\n    const encodedString = 'data:image/svg+xml;base64,' + new Buffer(svgText).toString('base64');\n    img.src = encodedString; // start loading image\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: this._refRenderer,\n      style: {\n        display: \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 4\n      }\n    });\n  }\n\n}\n\nexport default SvgToImg;","map":{"version":3,"sources":["/home/fsat/repos/tactics-board/src/editors/SvgToImg.js"],"names":["React","Component","FileSaver","SvgToImg","constructor","props","_refRenderer","createRef","toImg","svgText","orgWidth","orgHeight","imgWidth","imgHeight","canvas","document","createElement","width","height","ctx","getContext","img","addEventListener","e","drawImage","toBlob","blob","saveAs","current","innerHTML","encodedString","Buffer","toString","src","render","display"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,mBAAtB;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAChCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AACA,SAAKC,YAAL,gBAAoBN,KAAK,CAACO,SAAN,EAApB;AACA,GAJ+B,CAMhC;;;AACAC,EAAAA,KAAK,CAACC,OAAD,EAAUC,QAAV,EAAoBC,SAApB,EAA+BC,QAA/B,EAAyCC,SAAzC,EAAoD;AACxD;AACA,QAAIC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAb;AACAF,IAAAA,MAAM,CAACG,KAAP,GAAeL,QAAf;AACAE,IAAAA,MAAM,CAACI,MAAP,GAAgBL,SAAhB;AACA,QAAIM,GAAG,GAAGL,MAAM,CAACM,UAAP,CAAkB,IAAlB,CAAV,CALwD,CAOxD;AACA;AAEA;;AACA,QAAIC,GAAG,GAAGN,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAV,CAXwD,CAYxD;;AACAK,IAAAA,GAAG,CAACC,gBAAJ,CAAqB,MAArB,EAA6BC,CAAC,IAAG;AAChC;AACAJ,MAAAA,GAAG,CAACK,SAAJ,CAAcH,GAAd,EACC,CADD,EACI,CADJ,EACOX,QADP,EACiBC,SADjB,EAEC;AACA,OAHD,EAGI,CAHJ,EAGOD,QAHP,EAGiBC,SAHjB,EAFgC,CAOhC;;AACAG,MAAAA,MAAM,CAACW,MAAP,CAAc,UAASC,IAAT,EAAe;AAC5BxB,QAAAA,SAAS,CAACyB,MAAV,CAAiBD,IAAjB,EAAuB,mBAAvB;AACA,OAFD,EARgC,CAWhC;;AACA,WAAKpB,YAAL,CAAkBsB,OAAlB,CAA0BC,SAA1B,GAAsC,EAAtC;AACA,KAbD,EAbwD,CA4BxD;;AACA,UAAMC,aAAa,GAAG,+BAA+B,IAAIC,MAAJ,CAAWtB,OAAX,EAAoBuB,QAApB,CAA6B,QAA7B,CAArD;AACAX,IAAAA,GAAG,CAACY,GAAJ,GAAUH,aAAV,CA9BwD,CA8B/B;AACzB;;AAEDI,EAAAA,MAAM,GAAG;AACR,wBACC;AAAK,MAAA,GAAG,EAAE,KAAK5B,YAAf;AAA6B,MAAA,KAAK,EAAE;AAAC6B,QAAAA,OAAO,EAAC;AAAT,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD;AAGA;;AA5C+B;;AA+CjC,eAAehC,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport FileSaver from 'browser-filesaver';\n\nclass SvgToImg extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis._refRenderer = React.createRef();\n\t}\n\t\n\t// create image from svg text\n\ttoImg(svgText, orgWidth, orgHeight, imgWidth, imgHeight) {\n\t\t// Create Canvas\n\t\tlet canvas = document.createElement('canvas');\n\t\tcanvas.width = imgWidth;\n\t\tcanvas.height = imgHeight;\n\t\tlet ctx = canvas.getContext(\"2d\");\n\n\t\t// show canvas\n\t\t//this._refRenderer.current.appendChild(canvas);\n\n\t\t// Create image\n\t\tlet img = document.createElement('img');\n\t\t// when loaded draw and save\n\t\timg.addEventListener('load', e=> {\n\t\t\t// draw image\n\t\t\tctx.drawImage(img,\n\t\t\t\t0, 0, orgWidth, orgHeight,\n\t\t\t\t//0, 0, imgWidth, imgHeight\n\t\t\t\t0, 0, orgWidth, orgHeight\n\t\t\t);\n\t\t\t// save image\n\t\t\tcanvas.toBlob(function(blob) {\n\t\t\t\tFileSaver.saveAs(blob, \"tactics-board.png\");\n\t\t\t});\n\t\t\t// clear everything\n\t\t\tthis._refRenderer.current.innerHTML = '';\n\t\t});\n\n\t\t// prepare svg to load image\n\t\tconst encodedString = 'data:image/svg+xml;base64,' + new Buffer(svgText).toString('base64');\n\t\timg.src = encodedString;\t// start loading image\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div ref={this._refRenderer} style={{display:\"none\"}}></div>\n\t\t);\n\t}\n}\n\nexport default SvgToImg;"]},"metadata":{},"sourceType":"module"}