{"ast":null,"code":"var _jsxFileName = \"/home/fsat/repos/tactics-board/src/App.js\";\nimport React, { Component } from 'react';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport PitchEdit from './editors/PitchEdit';\nimport SvgToImg from './editors/SvgToImg';\nimport AppTools from './ui/AppTools';\nimport ConfirmDialog from './ui/ConfirmDialog';\nimport PitchFutsal from './pitch/PitchFutsal';\nimport DrawMode from './pitch/DrawMode';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props); // application Material-UI theme\n\n    this.appTheme = createMuiTheme(); // references\n\n    this.refAppTools = /*#__PURE__*/React.createRef();\n    this.refPitchEdit = /*#__PURE__*/React.createRef();\n    this.refSvgToImg = /*#__PURE__*/React.createRef();\n    this.refConfirmDialog = /*#__PURE__*/React.createRef(); // event handlers\n\n    this.SaveImage = this.SaveImage.bind(this);\n    this.CreateNewScheme = this.CreateNewScheme.bind(this);\n    this.CreateNewAnimation = this.CreateNewAnimation.bind(this);\n    this.PitchReset = this.PitchReset.bind(this);\n    this.OnPitchModified = this.OnPitchModified.bind(this);\n    this.OnDrawModeModified = this.OnDrawModeModified.bind(this); // init default state\n\n    this.pitch = this.DefaultPitch();\n    this.pitch.onModified = this.OnPitchModified;\n    this.drawMode = new DrawMode();\n    this.drawMode.onModified = this.OnDrawModeModified;\n    this.state = {\n      pitch: this.pitch,\n      drawMode: this.drawMode\n    };\n  }\n\n  DefaultPitch() {\n    let pitch = new PitchFutsal();\n    pitch.initDefault(200, 8, 120, 100, 5, 80);\n    return pitch;\n  }\n\n  PitchReset() {\n    console.log(\"Pitch reset\");\n    this.pitch.onModified = null;\n    this.pitch = this.DefaultPitch();\n    this.pitch.onModified = this.OnPitchModified;\n    this.drawMode.onModified = null;\n    this.drawMode = new DrawMode();\n    this.drawMode.onModified = this.OnDrawModeModified;\n    this.setState({\n      pitch: this.pitch,\n      drawMode: this.drawMode\n    });\n  }\n\n  OnPitchModified(newPitch) {\n    this.pitch.onModified = null;\n    this.pitch = newPitch;\n    this.pitch.onModified = this.OnPitchModified;\n    this.setState({\n      pitch: this.pitch\n    });\n  }\n\n  OnDrawModeModified(newDrawMode) {\n    this.drawMode.onModified = null;\n    this.drawMode = newDrawMode;\n    this.drawMode.onModified = this.OnDrawModeModified;\n    this.setState({\n      drawMode: this.drawMode\n    }); // update pitch overlay\n    // TODO: reconsider this\n\n    this.pitch.overlay = this.drawMode.pitchOverlay;\n  }\n\n  CreateNewScheme() {\n    if (!this.state.pitch.isModified) {\n      return;\n    }\n\n    this.refConfirmDialog.current.Show(\"Create new scheme\", \"Pitch is modified, are you sure you want to discard changes?\", this.PitchReset);\n  }\n\n  CreateNewAnimation() {\n    this.refConfirmDialog.current.Show(\"Create new animation\", \"Are you sure you want to create new animation?\", null);\n  }\n\n  SaveImage() {\n    console.log(\"App save image\");\n    let svg = this.refPitchEdit.current.getSVG();\n    this.refSvgToImg.current.toImg(svg.svgText, svg.width, svg.height, svg.width / 2, svg.height / 2);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(ThemeProvider, {\n      theme: this.appTheme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(AppTools, {\n      ref: this.refAppTools,\n      drawMode: this.state.drawMode,\n      saveImage: this.SaveImage,\n      createNewScheme: this.CreateNewScheme,\n      createNewAnimation: this.CreateNewAnimation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(PitchEdit, {\n      ref: this.refPitchEdit,\n      pitch: this.state.pitch,\n      drawMode: this.state.drawMode,\n      viewBoxLeft: 0,\n      viewBoxTop: 0,\n      viewBoxRight: 4500,\n      viewBoxBottom: 2500,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(ConfirmDialog, {\n      ref: this.refConfirmDialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(SvgToImg, {\n      ref: this.refSvgToImg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 6\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/fsat/repos/tactics-board/src/App.js"],"names":["React","Component","createMuiTheme","ThemeProvider","PitchEdit","SvgToImg","AppTools","ConfirmDialog","PitchFutsal","DrawMode","App","constructor","props","appTheme","refAppTools","createRef","refPitchEdit","refSvgToImg","refConfirmDialog","SaveImage","bind","CreateNewScheme","CreateNewAnimation","PitchReset","OnPitchModified","OnDrawModeModified","pitch","DefaultPitch","onModified","drawMode","state","initDefault","console","log","setState","newPitch","newDrawMode","overlay","pitchOverlay","isModified","current","Show","svg","getSVG","toImg","svgText","width","height","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,0BAA9C;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBT,SAAlB,CAA4B;AAC3BU,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN,EADkB,CAElB;;AACA,SAAKC,QAAL,GAAgBX,cAAc,EAA9B,CAHkB,CAIlB;;AACA,SAAKY,WAAL,gBAAmBd,KAAK,CAACe,SAAN,EAAnB;AACA,SAAKC,YAAL,gBAAoBhB,KAAK,CAACe,SAAN,EAApB;AACA,SAAKE,WAAL,gBAAmBjB,KAAK,CAACe,SAAN,EAAnB;AACA,SAAKG,gBAAL,gBAAwBlB,KAAK,CAACe,SAAN,EAAxB,CARkB,CASlB;;AACA,SAAKI,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBD,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKE,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBF,IAAxB,CAA6B,IAA7B,CAA1B;AACA,SAAKG,UAAL,GAAkB,KAAKA,UAAL,CAAgBH,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKI,eAAL,GAAuB,KAAKA,eAAL,CAAqBJ,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKK,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBL,IAAxB,CAA6B,IAA7B,CAA1B,CAfkB,CAiBlB;;AACA,SAAKM,KAAL,GAAa,KAAKC,YAAL,EAAb;AACA,SAAKD,KAAL,CAAWE,UAAX,GAAwB,KAAKJ,eAA7B;AACA,SAAKK,QAAL,GAAgB,IAAIpB,QAAJ,EAAhB;AACA,SAAKoB,QAAL,CAAcD,UAAd,GAA2B,KAAKH,kBAAhC;AACA,SAAKK,KAAL,GAAa;AACZJ,MAAAA,KAAK,EAAE,KAAKA,KADA;AAEZG,MAAAA,QAAQ,EAAE,KAAKA;AAFH,KAAb;AAIA;;AAEDF,EAAAA,YAAY,GAAG;AACd,QAAID,KAAK,GAAG,IAAIlB,WAAJ,EAAZ;AACAkB,IAAAA,KAAK,CAACK,WAAN,CACC,GADD,EACM,CADN,EACS,GADT,EAEC,GAFD,EAEM,CAFN,EAES,EAFT;AAIA,WAAOL,KAAP;AACA;;AAEDH,EAAAA,UAAU,GAAG;AACZS,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,SAAKP,KAAL,CAAWE,UAAX,GAAwB,IAAxB;AACA,SAAKF,KAAL,GAAa,KAAKC,YAAL,EAAb;AACA,SAAKD,KAAL,CAAWE,UAAX,GAAwB,KAAKJ,eAA7B;AACA,SAAKK,QAAL,CAAcD,UAAd,GAA2B,IAA3B;AACA,SAAKC,QAAL,GAAgB,IAAIpB,QAAJ,EAAhB;AACA,SAAKoB,QAAL,CAAcD,UAAd,GAA2B,KAAKH,kBAAhC;AACA,SAAKS,QAAL,CAAc;AACbR,MAAAA,KAAK,EAAE,KAAKA,KADC;AAEbG,MAAAA,QAAQ,EAAE,KAAKA;AAFF,KAAd;AAIA;;AAEDL,EAAAA,eAAe,CAACW,QAAD,EAAW;AACzB,SAAKT,KAAL,CAAWE,UAAX,GAAwB,IAAxB;AACA,SAAKF,KAAL,GAAaS,QAAb;AACA,SAAKT,KAAL,CAAWE,UAAX,GAAwB,KAAKJ,eAA7B;AACA,SAAKU,QAAL,CAAc;AACbR,MAAAA,KAAK,EAAE,KAAKA;AADC,KAAd;AAGA;;AAEDD,EAAAA,kBAAkB,CAACW,WAAD,EAAc;AAC/B,SAAKP,QAAL,CAAcD,UAAd,GAA2B,IAA3B;AACA,SAAKC,QAAL,GAAgBO,WAAhB;AACA,SAAKP,QAAL,CAAcD,UAAd,GAA2B,KAAKH,kBAAhC;AACA,SAAKS,QAAL,CAAc;AACbL,MAAAA,QAAQ,EAAE,KAAKA;AADF,KAAd,EAJ+B,CAO/B;AACA;;AACA,SAAKH,KAAL,CAAWW,OAAX,GAAqB,KAAKR,QAAL,CAAcS,YAAnC;AACA;;AAEDjB,EAAAA,eAAe,GAAG;AACjB,QAAI,CAAC,KAAKS,KAAL,CAAWJ,KAAX,CAAiBa,UAAtB,EAAkC;AACjC;AACA;;AACD,SAAKrB,gBAAL,CAAsBsB,OAAtB,CAA8BC,IAA9B,CACC,mBADD,EACsB,8DADtB,EAEC,KAAKlB,UAFN;AAIA;;AAEDD,EAAAA,kBAAkB,GAAG;AACpB,SAAKJ,gBAAL,CAAsBsB,OAAtB,CAA8BC,IAA9B,CACC,sBADD,EACyB,gDADzB,EAEC,IAFD;AAIA;;AAEDtB,EAAAA,SAAS,GAAG;AACXa,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,QAAIS,GAAG,GAAG,KAAK1B,YAAL,CAAkBwB,OAAlB,CAA0BG,MAA1B,EAAV;AACA,SAAK1B,WAAL,CAAiBuB,OAAjB,CAAyBI,KAAzB,CACCF,GAAG,CAACG,OADL,EAECH,GAAG,CAACI,KAFL,EAEYJ,GAAG,CAACK,MAFhB,EAGCL,GAAG,CAACI,KAAJ,GAAU,CAHX,EAGcJ,GAAG,CAACK,MAAJ,GAAW,CAHzB;AAKA;;AAEDC,EAAAA,MAAM,GAAG;AACR,wBACC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,aAAD;AAAe,MAAA,KAAK,EAAE,KAAKnC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAE,KAAKC,WAApB;AAAiC,MAAA,QAAQ,EAAE,KAAKgB,KAAL,CAAWD,QAAtD;AAAgE,MAAA,SAAS,EAAE,KAAKV,SAAhF;AAA2F,MAAA,eAAe,EAAE,KAAKE,eAAjH;AAAkI,MAAA,kBAAkB,EAAE,KAAKC,kBAA3J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,eAEC,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAE,KAAKN,YAArB;AAAmC,MAAA,KAAK,EAAE,KAAKc,KAAL,CAAWJ,KAArD;AAA4D,MAAA,QAAQ,EAAE,KAAKI,KAAL,CAAWD,QAAjF;AAA2F,MAAA,WAAW,EAAE,CAAxG;AAA2G,MAAA,UAAU,EAAE,CAAvH;AAA0H,MAAA,YAAY,EAAE,IAAxI;AAA8I,MAAA,aAAa,EAAE,IAA7J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,eAGC,oBAAC,aAAD;AAAe,MAAA,GAAG,EAAE,KAAKX,gBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHD,eAIC,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAE,KAAKD,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJD,CADD,CADD;AAUA;;AA/G0B;;AAkH5B,eAAeP,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport PitchEdit from './editors/PitchEdit'\nimport SvgToImg from './editors/SvgToImg'\nimport AppTools from './ui/AppTools'\nimport ConfirmDialog from './ui/ConfirmDialog'\nimport PitchFutsal from './pitch/PitchFutsal'\nimport DrawMode from './pitch/DrawMode'\nimport './App.css';\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t// application Material-UI theme\n\t\tthis.appTheme = createMuiTheme();\n\t\t// references\n\t\tthis.refAppTools = React.createRef();\n\t\tthis.refPitchEdit = React.createRef();\n\t\tthis.refSvgToImg = React.createRef();\n\t\tthis.refConfirmDialog = React.createRef();\n\t\t// event handlers\n\t\tthis.SaveImage = this.SaveImage.bind(this);\n\t\tthis.CreateNewScheme = this.CreateNewScheme.bind(this);\n\t\tthis.CreateNewAnimation = this.CreateNewAnimation.bind(this);\n\t\tthis.PitchReset = this.PitchReset.bind(this);\n\t\tthis.OnPitchModified = this.OnPitchModified.bind(this);\n\t\tthis.OnDrawModeModified = this.OnDrawModeModified.bind(this);\n\n\t\t// init default state\n\t\tthis.pitch = this.DefaultPitch();\n\t\tthis.pitch.onModified = this.OnPitchModified;\n\t\tthis.drawMode = new DrawMode();\n\t\tthis.drawMode.onModified = this.OnDrawModeModified;\n\t\tthis.state = {\n\t\t\tpitch: this.pitch,\n\t\t\tdrawMode: this.drawMode\n\t\t}\n\t}\n\t\n\tDefaultPitch() {\n\t\tlet pitch = new PitchFutsal();\n\t\tpitch.initDefault(\n\t\t\t200, 8, 120, \n\t\t\t100, 5, 80\n\t\t);\n\t\treturn pitch;\n\t}\n\n\tPitchReset() {\n\t\tconsole.log(\"Pitch reset\");\n\t\tthis.pitch.onModified = null;\n\t\tthis.pitch = this.DefaultPitch();\n\t\tthis.pitch.onModified = this.OnPitchModified;\n\t\tthis.drawMode.onModified = null;\n\t\tthis.drawMode = new DrawMode();\n\t\tthis.drawMode.onModified = this.OnDrawModeModified;\n\t\tthis.setState({\n\t\t\tpitch: this.pitch,\n\t\t\tdrawMode: this.drawMode\n\t\t});\n\t}\n\n\tOnPitchModified(newPitch) {\n\t\tthis.pitch.onModified = null;\n\t\tthis.pitch = newPitch;\n\t\tthis.pitch.onModified = this.OnPitchModified;\n\t\tthis.setState({\n\t\t\tpitch: this.pitch\n\t\t});\n\t}\n\n\tOnDrawModeModified(newDrawMode) {\n\t\tthis.drawMode.onModified = null;\n\t\tthis.drawMode = newDrawMode;\n\t\tthis.drawMode.onModified = this.OnDrawModeModified;\n\t\tthis.setState({\n\t\t\tdrawMode: this.drawMode\n\t\t});\n\t\t// update pitch overlay\n\t\t// TODO: reconsider this\n\t\tthis.pitch.overlay = this.drawMode.pitchOverlay;\n\t}\n\n\tCreateNewScheme() {\n\t\tif (!this.state.pitch.isModified) {\n\t\t\treturn;\n\t\t}\n\t\tthis.refConfirmDialog.current.Show(\n\t\t\t\"Create new scheme\", \"Pitch is modified, are you sure you want to discard changes?\",\n\t\t\tthis.PitchReset\n\t\t);\n\t}\n\n\tCreateNewAnimation() {\n\t\tthis.refConfirmDialog.current.Show(\n\t\t\t\"Create new animation\", \"Are you sure you want to create new animation?\",\n\t\t\tnull\n\t\t);\n\t}\n\n\tSaveImage() {\n\t\tconsole.log(\"App save image\");\n\t\tlet svg = this.refPitchEdit.current.getSVG();\n\t\tthis.refSvgToImg.current.toImg(\n\t\t\tsvg.svgText, \n\t\t\tsvg.width, svg.height, \n\t\t\tsvg.width/2, svg.height/2\n\t\t);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<ThemeProvider theme={this.appTheme}>\n\t\t\t\t\t<AppTools ref={this.refAppTools} drawMode={this.state.drawMode} saveImage={this.SaveImage} createNewScheme={this.CreateNewScheme} createNewAnimation={this.CreateNewAnimation} />\n\t\t\t\t\t<PitchEdit ref={this.refPitchEdit} pitch={this.state.pitch} drawMode={this.state.drawMode} viewBoxLeft={0} viewBoxTop={0} viewBoxRight={4500} viewBoxBottom={2500} />\n\t\t\t\t\t<ConfirmDialog ref={this.refConfirmDialog} />\n\t\t\t\t\t<SvgToImg ref={this.refSvgToImg} />\n\t\t\t\t</ThemeProvider>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}