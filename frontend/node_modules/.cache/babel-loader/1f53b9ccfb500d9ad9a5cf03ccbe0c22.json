{"ast":null,"code":"import Point from \"./Point\";\nimport Path from \"./Path\";\n\nclass Line {\n  // For line spline with control points see https://www.particleincell.com/2012/bezier-splines/\n  // Line iz created as straight line with 2 spline segments\n  constructor(id = \"\", color = 0, p1 = new Point(0, 0), p2 = new Point(0, 0), c1 = new Point(0, 0), c2 = new Point(0, 0), arrowStart = false, arrowEnd = false, dashed = false, isEdit = false) {\n    this.id = id;\n    this.color = color;\n    this.p1 = p1;\n    this.p2 = p2;\n    this.c1 = c1;\n    this.c2 = c2;\n    this.arrowStart = arrowStart;\n    this.arrowEnd = arrowEnd;\n    this.dashed = dashed;\n    this.isEdit = isEdit;\n  }\n\n  empty() {\n    return this.p1.equalTo(this.p2) && this.p1.equalTo(this.c1) && this.p1.equalTo(this.c2);\n  }\n\n  resize(x2, y2) {\n    this.p2 = new Point(x2, y2);\n    let lx = this.p2.x - this.p1.x;\n    let ly = this.p2.y - this.p1.y;\n    this.c1 = new Point(this.p1.x + lx / 3, this.p1.y + ly / 3);\n    this.c2 = new Point(this.p1.x + lx / 3 * 2, this.p1.y + ly / 3 * 2);\n  }\n\n  edit(pid, deltaX, deltaY) {\n    switch (pid) {\n      case \"p1\":\n        this.p1.move(deltaX, deltaY);\n        break;\n\n      case \"c1\":\n        this.c1.move(deltaX, deltaY);\n        break;\n\n      case \"c2\":\n        this.c2.move(deltaX, deltaY);\n        break;\n\n      case \"p2\":\n        this.p2.move(deltaX, deltaY);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  paths() {\n    let cx = this.computeControlPoints([this.p1.x, this.c1.x, this.c2.x, this.p2.x]);\n    let cy = this.computeControlPoints([this.p1.y, this.c1.y, this.c2.y, this.p2.y]);\n    let paths = [];\n    paths[0] = new Path(this.id, this.p1, this.c1, new Point(cx.p1[0], cy.p1[0]), new Point(cx.p2[0], cy.p2[0]), this.arrowStart, false);\n    paths[1] = new Path(this.id, this.c1, this.c2, new Point(cx.p1[1], cy.p1[1]), new Point(cx.p2[1], cy.p2[1]), false, false);\n    paths[2] = new Path(this.id, this.c2, this.p2, new Point(cx.p1[2], cy.p1[2]), new Point(cx.p2[2], cy.p2[2]), false, this.arrowEnd);\n    return paths;\n  } // computes control points given knots K, this is the brain of the operation\n\n\n  computeControlPoints(K) {\n    let p1 = [];\n    let p2 = [];\n    let n = K.length - 1; // rhs vector\n\n    let a = [];\n    let b = [];\n    let c = [];\n    let r = []; // left most segment\n\n    a[0] = 0;\n    b[0] = 2;\n    c[0] = 1;\n    r[0] = K[0] + 2 * K[1]; // internal segments\n\n    for (let i = 1; i < n - 1; i++) {\n      a[i] = 1;\n      b[i] = 4;\n      c[i] = 1;\n      r[i] = 4 * K[i] + 2 * K[i + 1];\n    } // right segment\n\n\n    a[n - 1] = 2;\n    b[n - 1] = 7;\n    c[n - 1] = 0;\n    r[n - 1] = 8 * K[n - 1] + K[n]; // solves Ax=b with the Thomas algorithm (from Wikipedia)\n\n    for (let i = 1; i < n; i++) {\n      let m = a[i] / b[i - 1];\n      b[i] = b[i] - m * c[i - 1];\n      r[i] = r[i] - m * r[i - 1];\n    }\n\n    p1[n - 1] = r[n - 1] / b[n - 1];\n\n    for (let i = n - 2; i >= 0; --i) {\n      p1[i] = (r[i] - c[i] * p1[i + 1]) / b[i];\n    } // we have p1, now compute p2\n\n\n    for (let i = 0; i < n - 1; i++) {\n      p2[i] = 2 * K[i + 1] - p1[i + 1];\n    }\n\n    p2[n - 1] = 0.5 * (K[n] + p1[n - 1]);\n    return {\n      p1: p1,\n      p2: p2\n    };\n  }\n\n}\n\nexport default Line;","map":{"version":3,"sources":["/home/fsat/repos/tactics-board/src/pitch/Line.js"],"names":["Point","Path","Line","constructor","id","color","p1","p2","c1","c2","arrowStart","arrowEnd","dashed","isEdit","empty","equalTo","resize","x2","y2","lx","x","ly","y","edit","pid","deltaX","deltaY","move","paths","cx","computeControlPoints","cy","K","n","length","a","b","c","r","i","m"],"mappings":"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","sourcesContent":["import Point from \"./Point\";\nimport Path from \"./Path\";\n\nclass Line {\n\t// For line spline with control points see https://www.particleincell.com/2012/bezier-splines/\n\t// Line iz created as straight line with 2 spline segments\n\tconstructor(id=\"\", color=0, p1=new Point(0,0), p2=new Point(0,0), c1=new Point(0,0), c2=new Point(0,0), arrowStart=false, arrowEnd=false, dashed=false, isEdit=false){\n\t\tthis.id = id;\n\t\tthis.color = color;\n\t\tthis.p1 = p1;\n\t\tthis.p2 = p2;\n\t\tthis.c1 = c1;\n\t\tthis.c2 = c2;\n\t\tthis.arrowStart = arrowStart;\n\t\tthis.arrowEnd = arrowEnd;\n\t\tthis.dashed = dashed;\n\t\tthis.isEdit = isEdit;\n\t}\n\n\tempty() {\n\t\treturn this.p1.equalTo(this.p2) \n\t\t\t&& this.p1.equalTo(this.c1)\n\t\t\t&& this.p1.equalTo(this.c2);\n\t}\n\n\tresize(x2,y2) {\n\t\tthis.p2= new Point(x2,y2);\n\t\tlet lx = this.p2.x - this.p1.x;\n\t\tlet ly = this.p2.y - this.p1.y;\n\t\tthis.c1 = new Point(\n\t\t\tthis.p1.x + lx / 3,\n\t\t\tthis.p1.y + ly / 3,\n\t\t); \n\t\tthis.c2 = new Point(\n\t\t\tthis.p1.x + lx / 3 * 2,\n\t\t\tthis.p1.y + ly / 3 * 2,\n\t\t); \n\t}\n\n\tedit(pid, deltaX, deltaY) {\n\t\tswitch (pid) {\n\t\t\tcase \"p1\":\n\t\t\t\tthis.p1.move(deltaX, deltaY);\n\t\t\t\tbreak;\n\t\t\tcase \"c1\":\n\t\t\t\tthis.c1.move(deltaX, deltaY);\n\t\t\t\tbreak;\n\t\t\tcase \"c2\":\n\t\t\t\tthis.c2.move(deltaX, deltaY);\n\t\t\t\tbreak;\n\t\t\tcase \"p2\":\n\t\t\t\tthis.p2.move(deltaX, deltaY);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tpaths() {\n\t\tlet cx = this.computeControlPoints([this.p1.x, this.c1.x, this.c2.x, this.p2.x]);\n\t\tlet cy = this.computeControlPoints([this.p1.y, this.c1.y, this.c2.y, this.p2.y]);\n\t\tlet paths = [];\n\t\tpaths[0] = new Path(\n\t\t\tthis.id, this.p1, this.c1,\n\t\t\tnew Point(cx.p1[0], cy.p1[0]),\n\t\t\tnew Point(cx.p2[0], cy.p2[0]),\n\t\t\tthis.arrowStart, false\n\t\t);\n\t\tpaths[1] = new Path(\n\t\t\tthis.id, this.c1, this.c2,\n\t\t\tnew Point(cx.p1[1], cy.p1[1]),\n\t\t\tnew Point(cx.p2[1], cy.p2[1]),\n\t\t\tfalse, false\n\t\t);\n\t\tpaths[2] = new Path(\n\t\t\tthis.id, this.c2, this.p2,\n\t\t\tnew Point(cx.p1[2], cy.p1[2]),\n\t\t\tnew Point(cx.p2[2], cy.p2[2]),\n\t\t\tfalse, this.arrowEnd\n\t\t);\n\t\treturn paths;\n\t}\n\n\t// computes control points given knots K, this is the brain of the operation\n\tcomputeControlPoints(K) {\n\t\tlet p1 = [];\n\t\tlet p2 = [];\n\t\tlet n = K.length-1;\n\t\t\n\t\t// rhs vector\n\t\tlet a = [];\n\t\tlet b = [];\n\t\tlet c = [];\n\t\tlet r = [];\n\t\t\n\t\t// left most segment\n\t\ta[0]=0;\n\t\tb[0]=2;\n\t\tc[0]=1;\n\t\tr[0] = K[0] + 2*K[1];\n\t\t\n\t\t// internal segments\n\t\tfor (let i = 1; i < n - 1; i++) {\n\t\t\ta[i]=1;\n\t\t\tb[i]=4;\n\t\t\tc[i]=1;\n\t\t\tr[i] = 4 * K[i] + 2 * K[i+1];\n\t\t}\n\n\t\t// right segment\n\t\ta[n-1]=2;\n\t\tb[n-1]=7;\n\t\tc[n-1]=0;\n\t\tr[n-1] = 8*K[n-1] + K[n];\n\t\t\n\t\t// solves Ax=b with the Thomas algorithm (from Wikipedia)\n\t\tfor (let i = 1; i < n; i++) {\n\t\t\tlet m = a[i] / b[i - 1];\n\t\t\tb[i] = b[i] - m * c[i - 1];\n\t\t\tr[i] = r[i] - m * r[i - 1];\n\t\t}\n\t\n\t\tp1[n-1] = r[n-1] / b[n-1];\n\t\tfor (let i = n - 2; i >= 0; --i) {\n\t\t\tp1[i] = (r[i] - c[i] * p1[i+1]) / b[i];\n\t\t}\n\t\t\t\n\t\t// we have p1, now compute p2\n\t\tfor (let i = 0; i < n-1; i++) {\n\t\t\tp2[i] = 2 * K[i+1] - p1[i+1];\n\t\t}\n\t\tp2[n-1] = 0.5 * (K[n]+p1[n-1]);\n\t\t\n\t\treturn { p1:p1, p2:p2 };\n\t}\n}\n\nexport default Line;\n"]},"metadata":{},"sourceType":"module"}