{"ast":null,"code":"var _jsxFileName = \"/home/fsat/repos/tactics-board/src/editors/TextEdit.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Text from '../pitch/Text';\nimport EditBox from './EditBox';\n\nclass TextEdit extends Component {\n  constructor(props) {\n    super(props);\n    this._selectionStart = 0;\n    this._selectionEnd = 0;\n    this._boxPadding = 10; // padding for text bounding box\n\n    this._editRef = /*#__PURE__*/React.createRef(); // reference to editor\n\n    this._textRef = /*#__PURE__*/React.createRef(); // reference to text\n\n    this._cursorRef = /*#__PURE__*/React.createRef(); // reference to cursor\n\n    this._boxRef = /*#__PURE__*/React.createRef(); // reference to text box\n\n    this.editStart = this.editStart.bind(this);\n    this.editChange = this.editChange.bind(this);\n    this.editKeyUp = this.editKeyUp.bind(this);\n    this.editEnd = this.editEnd.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.text.isTextEdit) {\n      this._editRef.current.focus();\n    }\n  } // remove all previous text elements\n\n\n  removeText() {\n    while (this._textRef.current.firstChild) {\n      this._textRef.current.removeChild(this._textRef.current.firstChild);\n    }\n  } // add text element\n\n\n  addTextLine(ln) {\n    let tspan = document.createElementNS('http://www.w3.org/2000/svg', 'tspan');\n    tspan.setAttribute('x', '0');\n    tspan.setAttribute('dy', '1.2em');\n    tspan.textContent = ln;\n\n    this._textRef.current.appendChild(tspan);\n  } // draw cursor line for text\n\n\n  drawCursor(x, y, height) {\n    const cln = this._cursorRef.current;\n    cln.setAttribute('x1', x);\n    cln.setAttribute('y1', y);\n    cln.setAttribute('x2', x);\n    cln.setAttribute('y2', y + height);\n  } // draw bounding box around text\n\n\n  drawTextBoundingBox(bBox) {\n    const x = bBox.x - this._boxPadding;\n    const y = bBox.y - this._boxPadding;\n    const width = bBox.width + this._boxPadding * 2;\n    const height = bBox.height + this._boxPadding * 2;\n    const box = this._boxRef.current;\n    box.setAttribute('x', x);\n    box.setAttribute('y', y);\n    box.setAttribute('width', width);\n    box.setAttribute('height', height);\n  }\n\n  editStart(e) {\n    this._editRef.current.value = this.props.text.text;\n  }\n\n  editChange(e) {\n    this.removeText();\n    let txt = this._editRef.current.value;\n    let ln = '';\n\n    for (let i = 0; i < txt.length; i++) {\n      ln += txt[i];\n\n      if ('\\n' === txt[i]) {\n        this.addTextLine(ln);\n        ln = '';\n      }\n    }\n\n    if (ln.length > 0) {\n      this.addTextLine(ln);\n    }\n  }\n\n  editShowCursor() {\n    if (0 === this._selectionEnd) {\n      return;\n    }\n\n    try {\n      const cr = this._textRef.current.getExtentOfChar(this._selectionEnd - 1);\n\n      this.drawCursor(cr.x + cr.width, cr.y, cr.height);\n\n      const bb = this._textRef.current.getBBox();\n\n      this.drawTextBoundingBox(bb);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  editKeyUp(e) {\n    this._selectionStart = this._editRef.current.selectionStart;\n    this._selectionEnd = this._editRef.current.selectionEnd;\n    this.editShowCursor();\n  }\n\n  editEnd(e) {\n    if (null === this.props.onEditDone) {\n      return;\n    }\n\n    let tx = this._editRef.current.value.trim();\n\n    var bb = this._textRef.current.getBBox();\n\n    console.log(bb);\n    this.removeText();\n    this.props.onEditDone(this.props.text.id, tx, bb.x, bb.y, bb.width, bb.height);\n  }\n\n  editBox(isEdit, box) {\n    if (!isEdit) {\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(EditBox, {\n      box: box,\n      showBox: true,\n      showResize: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 4\n      }\n    });\n  }\n\n  editor(tx) {\n    if (!tx.isTextEdit) {\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"line\", {\n      ref: this._cursorRef,\n      strokeWidth: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"rect\", {\n      ref: this._boxRef,\n      className: \"editBox\",\n      x: \"0\",\n      y: \"0\",\n      width: tx.width,\n      height: tx.height,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"foreignObject\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      ref: this._editRef,\n      onFocus: this.editStart,\n      onInput: this.editChange,\n      onKeyUp: this.editKeyUp,\n      onBlur: this.editEnd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 6\n      }\n    })));\n  }\n\n  renderLines(tx) {\n    // don't render lines in edit mode, created manually\n    if (tx.isTextEdit) {\n      return null;\n    }\n\n    let lines = tx.text.split(\"\\n\");\n    return lines.map((ln, index) => {\n      return /*#__PURE__*/React.createElement(\"tspan\", {\n        key: index,\n        \"data-ref\": tx.id,\n        x: \"0\",\n        dy: \"1.2em\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 5\n        }\n      }, ln);\n    });\n  }\n\n  render() {\n    const tx = this.props.text;\n    const className = 'txt' + tx.size + ' pc' + tx.color;\n    let transform = 'translate(' + tx.x + ',' + tx.y + ')';\n\n    if (0 !== tx.rotation) {\n      let cx = tx.bx + tx.bwidth / 2;\n      let cy = tx.by + tx.bheight / 2;\n      transform += ' rotate(' + tx.rotation + ',' + cx + ',' + cy + ')';\n    }\n\n    return /*#__PURE__*/React.createElement(\"g\", {\n      className: className,\n      transform: transform,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"text\", {\n      ref: this._textRef,\n      \"data-ref\": tx.id,\n      xmlSpace: \"preserve\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 5\n      }\n    }, this.renderLines(tx)), this.editor(tx), this.editBox(tx.isEdit, tx.box));\n  }\n\n}\n\nTextEdit.defaultProps = {\n  text: null,\n  onEditDone: null\n};\nTextEdit.propTypes = {\n  text: PropTypes.instanceOf(Text),\n  onEditDone: PropTypes.func\n};\nexport default TextEdit;","map":{"version":3,"sources":["/home/fsat/repos/tactics-board/src/editors/TextEdit.js"],"names":["React","Component","PropTypes","Text","EditBox","TextEdit","constructor","props","_selectionStart","_selectionEnd","_boxPadding","_editRef","createRef","_textRef","_cursorRef","_boxRef","editStart","bind","editChange","editKeyUp","editEnd","componentDidUpdate","prevProps","prevState","text","isTextEdit","current","focus","removeText","firstChild","removeChild","addTextLine","ln","tspan","document","createElementNS","setAttribute","textContent","appendChild","drawCursor","x","y","height","cln","drawTextBoundingBox","bBox","width","box","e","value","txt","i","length","editShowCursor","cr","getExtentOfChar","bb","getBBox","error","console","log","selectionStart","selectionEnd","onEditDone","tx","trim","id","editBox","isEdit","editor","renderLines","lines","split","map","index","render","className","size","color","transform","rotation","cx","bx","bwidth","cy","by","bheight","defaultProps","propTypes","instanceOf","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Text from '../pitch/Text';\nimport EditBox from './EditBox'\n\nclass TextEdit extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis._selectionStart = 0;\n\t\tthis._selectionEnd = 0;\n\t\tthis._boxPadding = 10;\t\t\t\t\t// padding for text bounding box\n\t\tthis._editRef = React.createRef();\t\t// reference to editor\n\t\tthis._textRef = React.createRef();\t\t// reference to text\n\t\tthis._cursorRef = React.createRef();\t// reference to cursor\n\t\tthis._boxRef = React.createRef();\t\t// reference to text box\n\t\tthis.editStart = this.editStart.bind(this);\n\t\tthis.editChange = this.editChange.bind(this);\n\t\tthis.editKeyUp = this.editKeyUp.bind(this);\n\t\tthis.editEnd = this.editEnd.bind(this);\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\tif (this.props.text.isTextEdit) {\n\t\t\tthis._editRef.current.focus();\n\t\t}\n\t}\n\n\t// remove all previous text elements\n\tremoveText() {\n\t\twhile (this._textRef.current.firstChild) {\n\t\t\tthis._textRef.current.removeChild(this._textRef.current.firstChild);\n\t\t}\n\t}\n\n\t// add text element\n\taddTextLine(ln) {\n\t\tlet tspan = document.createElementNS('http://www.w3.org/2000/svg', 'tspan');\n\t\ttspan.setAttribute('x','0');\n\t\ttspan.setAttribute('dy','1.2em'); \n\t\ttspan.textContent = ln;\n\t\tthis._textRef.current.appendChild(tspan);\n\t}\n\n\t// draw cursor line for text\n\tdrawCursor(x, y, height) {\n\t\tconst cln = this._cursorRef.current;\n\t\tcln.setAttribute('x1', x);\n\t\tcln.setAttribute('y1', y);\n\t\tcln.setAttribute('x2', x);\n\t\tcln.setAttribute('y2', y + height);\n\t}\n\n\t// draw bounding box around text\n\tdrawTextBoundingBox(bBox) {\n\t\tconst x = bBox.x - this._boxPadding;\n\t\tconst y = bBox.y - this._boxPadding;\n\t\tconst width = bBox.width + this._boxPadding * 2;\n\t\tconst height = bBox.height + this._boxPadding * 2;\n\n\t\tconst box = this._boxRef.current;\n\t\tbox.setAttribute('x', x);\n\t\tbox.setAttribute('y', y);\n\t\tbox.setAttribute('width', width);\n\t\tbox.setAttribute('height', height);\n\t}\n\n\teditStart(e) {\n\t\tthis._editRef.current.value = this.props.text.text;\n\t}\n\n\teditChange(e) {\n\t\tthis.removeText();\n\t\tlet txt = this._editRef.current.value;\n\t\tlet ln = '';\n\t\tfor (let i = 0; i < txt.length; i++) {\n\t\t\tln += txt[i];\n\t\t\tif ('\\n' === txt[i]) {\n\t\t\t\tthis.addTextLine(ln);\n\t\t\t\tln = '';\n\t\t\t}\n\t\t}\n\t\tif (ln.length > 0) {\n\t\t\tthis.addTextLine(ln);\n\t\t}\n\t}\n\n\teditShowCursor() {\n\t\tif (0 === this._selectionEnd) {\n\t\t\treturn;\n\t\t}\n\t\ttry {\n\t\t\tconst cr = this._textRef.current.getExtentOfChar(this._selectionEnd-1);\n\t\t\tthis.drawCursor(cr.x + cr.width, cr.y, cr.height);\n\n\t\t\tconst bb = this._textRef.current.getBBox();\n\t\t\tthis.drawTextBoundingBox(bb);\n\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\t\t\t\n\t\t}\n\t}\n\n\teditKeyUp(e) {\n\t\tthis._selectionStart = this._editRef.current.selectionStart;\n\t\tthis._selectionEnd = this._editRef.current.selectionEnd;\n\t\tthis.editShowCursor();\n\t}\n\n\teditEnd(e) {\n\t\tif (null === this.props.onEditDone) {\n\t\t\treturn;\n\t\t}\n        let tx = this._editRef.current.value.trim();\n\t\tvar bb = this._textRef.current.getBBox();\n\t\tconsole.log(bb);\n        this.removeText();\n\t\tthis.props.onEditDone(\n\t\t\tthis.props.text.id, tx, \n\t\t\tbb.x, bb.y,\n\t\t\tbb.width, bb.height\n\t\t);\n\t}\n\n\teditBox(isEdit, box) {\n\t\tif (!isEdit) {\n\t\t\treturn null;\n\t\t}\n\t\treturn (\n\t\t\t<EditBox box={box} showBox={true} showResize={false} />\n\t\t)\n\t}\n\n\teditor(tx) {\n\t\tif (!tx.isTextEdit) {\n\t\t\treturn null;\n\t\t}\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<line ref={this._cursorRef} strokeWidth=\"8\" />\n\t\t\t\t<rect ref={this._boxRef} className=\"editBox\" x=\"0\" y=\"0\" width={tx.width} height={tx.height} />\n\t\t\t\t<foreignObject>\n\t\t\t\t\t<textarea ref={this._editRef} onFocus={this.editStart} onInput={this.editChange} onKeyUp={this.editKeyUp} onBlur={this.editEnd}></textarea>\n\t\t\t\t</foreignObject>\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n\n\trenderLines(tx){\n\t\t// don't render lines in edit mode, created manually\n\t\tif (tx.isTextEdit) {\n\t\t\treturn null;\n\t\t}\n\t\tlet lines = tx.text.split(\"\\n\");\n\t\treturn lines.map((ln, index) => {\n\t\t\treturn (\n\t\t\t\t<tspan key={index} data-ref={tx.id} x=\"0\" dy=\"1.2em\">{ln}</tspan>\n\t\t\t);\n\t\t});\n\t}\n\n\trender() {\n\t\tconst tx = this.props.text;\n        const className = 'txt'+ tx.size + ' pc' + tx.color;\n        let transform = 'translate('+ tx.x + ',' + tx.y + ')';\n        if (0 !== tx.rotation) {\n\t\t\tlet cx = tx.bx + tx.bwidth / 2;\n\t\t\tlet cy = tx.by + tx.bheight / 2;\n            transform += ' rotate('+ tx.rotation + ',' + cx + ',' + cy + ')';\n        }\n\t\treturn (\n\t\t\t<g className={className} transform={transform}>\n\t\t\t\t<text ref={this._textRef} data-ref={tx.id} xmlSpace=\"preserve\">\n\t\t\t\t\t{this.renderLines(tx)}\n\t\t\t\t</text>\n\t\t\t\t{this.editor(tx)}\n\t\t\t\t{this.editBox(tx.isEdit, tx.box)}\n\t\t\t</g>\n\t\t);\n\t}\n}\n\nTextEdit.defaultProps = {\n\ttext: null,\n\tonEditDone: null\n}\n\nTextEdit.propTypes = {\n\ttext: PropTypes.instanceOf(Text),\n\tonEditDone: PropTypes.func\n}\n\nexport default TextEdit;"]},"metadata":{},"sourceType":"module"}