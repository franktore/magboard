{"ast":null,"code":"import Box from './Box';\n\nclass Ellipse {\n  constructor(id = \"\", color = 0, x1 = 0, y1 = 0, rx = 0, ry = 0, rotation = 0, dashed = false, isEdit = false) {\n    this.id = id;\n    this.color = color;\n    this.x1 = x1;\n    this.y1 = y1;\n    this.x2 = x1 + rx * 2;\n    this.y2 = y1 + ry * 2;\n    this.rotation = rotation;\n    this.dashed = dashed;\n    this.isEdit = isEdit;\n  }\n\n  get cx() {\n    return (this.x1 < this.x2 ? this.x1 : this.x2) + this.rx;\n  }\n\n  get cy() {\n    return (this.y1 < this.y2 ? this.y1 : this.y2) + this.ry;\n  }\n\n  get rx() {\n    return (this.x1 < this.x2 ? this.x2 - this.x1 : this.x1 - this.x2) / 2;\n  }\n\n  get ry() {\n    return (this.y1 < this.y2 ? this.y2 - this.y1 : this.y1 - this.y2) / 2;\n  }\n\n  get box() {\n    return new Box(this.id, this.cx - this.rx, this.cy - this.ry, this.rx * 2, this.ry * 2);\n  }\n\n  resize(x2, y2, proportional) {\n    this.x2 = x2;\n\n    if (!proportional) {\n      this.y2 = y2;\n    } else {\n      let szy = this.rx * (this.y1 < y2 ? 2 : -2);\n      this.y2 = this.y1 + szy;\n    }\n  }\n\n  edit(corner, deltaX, deltaY) {\n    switch (corner) {\n      case \"tl\":\n        this.x1 += deltaX;\n        this.y1 += deltaY;\n        break;\n\n      case \"tr\":\n        this.x2 += deltaX;\n        this.y1 += deltaY;\n        break;\n\n      case \"bl\":\n        this.x1 += deltaX;\n        this.y2 += deltaY;\n        break;\n\n      case \"br\":\n        this.x2 += deltaX;\n        this.y2 += deltaY;\n        break;\n\n      case \"mv\":\n        this.x1 += deltaX;\n        this.y1 += deltaY;\n        this.x2 += deltaX;\n        this.y2 += deltaY;\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  rotate(posX, posY, snap) {\n    let vx = posX - this.cx;\n    let vy = posY - this.cy;\n    let angle = Math.atan2(vy, vx) * 180 / Math.PI;\n    angle += 90;\n\n    if (angle < 0) {\n      angle += 360;\n    }\n\n    if (snap) {\n      angle = Math.floor(angle / 45) * 45;\n    }\n\n    this.rotation = angle;\n  }\n\n}\n\nexport default Ellipse;","map":{"version":3,"sources":["/home/fsat/repos/tactics-board/src/pitch/Ellipse.js"],"names":["Box","Ellipse","constructor","id","color","x1","y1","rx","ry","rotation","dashed","isEdit","x2","y2","cx","cy","box","resize","proportional","szy","edit","corner","deltaX","deltaY","rotate","posX","posY","snap","vx","vy","angle","Math","atan2","PI","floor"],"mappings":"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","sourcesContent":["import Box from './Box';\n\nclass Ellipse {\n\tconstructor(id=\"\", color=0, x1=0, y1=0, rx=0, ry=0, rotation=0, dashed=false, isEdit=false){\n\t\tthis.id = id;\n\t\tthis.color = color;\n\t\tthis.x1 = x1;\n\t\tthis.y1 = y1;\n\t\tthis.x2 = x1 + rx * 2;\n\t\tthis.y2 = y1 + ry * 2;\n\t\tthis.rotation = rotation;\n\t\tthis.dashed = dashed;\n\t\tthis.isEdit = isEdit;\n\t}\n\n\tget cx() {\n\t\treturn (this.x1 < this.x2 ? this.x1 : this.x2) + this.rx;\n\t}\n\n\tget cy() {\n\t\treturn (this.y1 < this.y2 ? this.y1 : this.y2) + this.ry;\n\t}\n\n\tget rx() {\n\t\treturn (this.x1 < this.x2 ? this.x2 - this.x1 : this.x1 - this.x2) / 2;\n\t}\n\n\tget ry() {\n\t\treturn (this.y1 < this.y2 ? this.y2 - this.y1 : this.y1 - this.y2) / 2;\n\t}\n\n\tget box() {\n\t\treturn new Box(\n\t\t\tthis.id,\n\t\t\tthis.cx - this.rx,\n\t\t\tthis.cy - this.ry,\n\t\t\tthis.rx * 2,\n\t\t\tthis.ry * 2\n\t\t);\n\t}\n\n\tresize(x2, y2, proportional) {\n\t\tthis.x2 = x2;\n\t\tif (!proportional) {\n\t\t\tthis.y2 = y2;\n\t\t} else {\n\t\t\tlet szy = this.rx * (this.y1 < y2 ? 2 : -2);\n\t\t\tthis.y2 = this.y1 + szy;\n\t\t}\n\t}\n\n\tedit(corner, deltaX, deltaY) {\n\t\tswitch (corner) {\n\t\t\tcase \"tl\":\n\t\t\t\tthis.x1 += deltaX;\n\t\t\t\tthis.y1 += deltaY;\n\t\t\t\tbreak;\n\t\t\tcase \"tr\":\n\t\t\t\tthis.x2 += deltaX;\n\t\t\t\tthis.y1 += deltaY;\n\t\t\t\tbreak;\n\t\t\tcase \"bl\":\n\t\t\t\tthis.x1 += deltaX;\n\t\t\t\tthis.y2 += deltaY;\n\t\t\t\tbreak;\n\t\t\tcase \"br\":\n\t\t\t\tthis.x2 += deltaX;\n\t\t\t\tthis.y2 += deltaY;\n\t\t\t\tbreak;\n\t\t\tcase \"mv\":\n\t\t\t\tthis.x1 += deltaX;\n\t\t\t\tthis.y1 += deltaY;\n\t\t\t\tthis.x2 += deltaX;\n\t\t\t\tthis.y2 += deltaY;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\trotate(posX, posY, snap) {\n\t\tlet vx = posX - this.cx;\n\t\tlet vy = posY - this.cy;\n\t\tlet angle = Math.atan2(vy, vx) * 180 / Math.PI;\n\t\tangle += 90;\n\t\tif (angle < 0) {\n\t\t\tangle += 360;\n\t\t}\n\t\tif (snap) {\n\t\t\tangle = Math.floor(angle / 45) * 45;\n\t\t}\n\t\tthis.rotation = angle;\n\t}\n}\n\nexport default Ellipse;\n"]},"metadata":{},"sourceType":"module"}