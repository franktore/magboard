{"ast":null,"code":"var _jsxFileName = \"/home/fsat/repos/tactics-board/src/editors/LineEdit.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Line from '../pitch/Line';\nimport DragHandle from './DragHandle';\n\nclass LineEdit extends Component {\n  editHandles(l) {\n    if (!l.isEdit) {\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(DragHandle, {\n      id: \"edit-l1-\" + l.id,\n      position: l.p1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(DragHandle, {\n      id: \"edit-l2-\" + l.id,\n      position: l.c1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(DragHandle, {\n      id: \"edit-l3-\" + l.id,\n      position: l.c2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(DragHandle, {\n      id: \"edit-l4-\" + l.id,\n      position: l.p2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 5\n      }\n    }));\n  }\n\n  renderPath(p, key) {\n    const d = \"M \" + p.p1.x + \" \" + p.p1.y + \" C \" + p.c1.x + \" \" + p.c1.y + \" \" + p.c2.x + \" \" + p.c2.y + \" \" + p.p2.x + \" \" + p.p2.y;\n    const markerStart = p.arrowStart ? \"url(#arrowStart)\" : \"\";\n    const markerEnd = p.arrowEnd ? \"url(#arrowEnd)\" : \"\";\n    return /*#__PURE__*/React.createElement(\"path\", {\n      key: key,\n      d: d,\n      \"data-ref\": p.id,\n      markerStart: markerStart,\n      markerEnd: markerEnd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 4\n      }\n    });\n  }\n\n  render() {\n    const l = this.props.line;\n    const className = (l.dashed ? 'line dashed pc' : 'line pc') + l.color;\n    const allPaths = l.paths().map((p, index) => this.renderPath(p, index.toString()));\n    return /*#__PURE__*/React.createElement(\"g\", {\n      className: className,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 4\n      }\n    }, allPaths, this.editHandles(l));\n  }\n\n}\n\nLineEdit.defaultProps = {\n  line: null\n};\nLineEdit.propTypes = {\n  line: PropTypes.instanceOf(Line)\n};\nexport default LineEdit;","map":{"version":3,"sources":["/home/fsat/repos/tactics-board/src/editors/LineEdit.js"],"names":["React","Component","PropTypes","Line","DragHandle","LineEdit","editHandles","l","isEdit","id","p1","c1","c2","p2","renderPath","p","key","d","x","y","markerStart","arrowStart","markerEnd","arrowEnd","render","props","line","className","dashed","color","allPaths","paths","map","index","toString","defaultProps","propTypes","instanceOf"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAEhCK,EAAAA,WAAW,CAACC,CAAD,EAAI;AACd,QAAI,CAACA,CAAC,CAACC,MAAP,EAAe;AACd,aAAO,IAAP;AACA;;AACD,wBACC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,UAAD;AAAY,MAAA,EAAE,EAAE,aAAaD,CAAC,CAACE,EAA/B;AAAmC,MAAA,QAAQ,EAAEF,CAAC,CAACG,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,eAEC,oBAAC,UAAD;AAAY,MAAA,EAAE,EAAE,aAAaH,CAAC,CAACE,EAA/B;AAAmC,MAAA,QAAQ,EAAEF,CAAC,CAACI,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,eAGC,oBAAC,UAAD;AAAY,MAAA,EAAE,EAAE,aAAaJ,CAAC,CAACE,EAA/B;AAAmC,MAAA,QAAQ,EAAEF,CAAC,CAACK,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHD,eAIC,oBAAC,UAAD;AAAY,MAAA,EAAE,EAAE,aAAaL,CAAC,CAACE,EAA/B;AAAmC,MAAA,QAAQ,EAAEF,CAAC,CAACM,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJD,CADD;AAQA;;AAEDC,EAAAA,UAAU,CAACC,CAAD,EAAIC,GAAJ,EAAS;AAClB,UAAMC,CAAC,GAAG,OAAOF,CAAC,CAACL,EAAF,CAAKQ,CAAZ,GAAgB,GAAhB,GAAsBH,CAAC,CAACL,EAAF,CAAKS,CAA3B,GAA+B,KAA/B,GAAuCJ,CAAC,CAACJ,EAAF,CAAKO,CAA5C,GAAgD,GAAhD,GAAsDH,CAAC,CAACJ,EAAF,CAAKQ,CAA3D,GAA+D,GAA/D,GAAqEJ,CAAC,CAACH,EAAF,CAAKM,CAA1E,GAA8E,GAA9E,GAAoFH,CAAC,CAACH,EAAF,CAAKO,CAAzF,GAA6F,GAA7F,GAAmGJ,CAAC,CAACF,EAAF,CAAKK,CAAxG,GAA4G,GAA5G,GAAkHH,CAAC,CAACF,EAAF,CAAKM,CAAjI;AACA,UAAMC,WAAW,GAAGL,CAAC,CAACM,UAAF,GAAe,kBAAf,GAAoC,EAAxD;AACA,UAAMC,SAAS,GAAGP,CAAC,CAACQ,QAAF,GAAa,gBAAb,GAAgC,EAAlD;AACA,wBACC;AAAM,MAAA,GAAG,EAAEP,GAAX;AAAgB,MAAA,CAAC,EAAEC,CAAnB;AAAsB,kBAAUF,CAAC,CAACN,EAAlC;AAAsC,MAAA,WAAW,EAAEW,WAAnD;AAAgE,MAAA,SAAS,EAAEE,SAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD;AAGA;;AAEDE,EAAAA,MAAM,GAAG;AACR,UAAMjB,CAAC,GAAG,KAAKkB,KAAL,CAAWC,IAArB;AACA,UAAMC,SAAS,GAAG,CAACpB,CAAC,CAACqB,MAAF,GAAW,gBAAX,GAA8B,SAA/B,IAA4CrB,CAAC,CAACsB,KAAhE;AACA,UAAMC,QAAQ,GAAGvB,CAAC,CAACwB,KAAF,GAAUC,GAAV,CAAc,CAACjB,CAAD,EAAIkB,KAAJ,KAAc,KAAKnB,UAAL,CAAgBC,CAAhB,EAAmBkB,KAAK,CAACC,QAAN,EAAnB,CAA5B,CAAjB;AACA,wBACC;AAAG,MAAA,SAAS,EAAEP,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEG,QADF,EAEE,KAAKxB,WAAL,CAAiBC,CAAjB,CAFF,CADD;AAMA;;AAnC+B;;AAsCjCF,QAAQ,CAAC8B,YAAT,GAAwB;AACvBT,EAAAA,IAAI,EAAE;AADiB,CAAxB;AAIArB,QAAQ,CAAC+B,SAAT,GAAqB;AACpBV,EAAAA,IAAI,EAAExB,SAAS,CAACmC,UAAV,CAAqBlC,IAArB;AADc,CAArB;AAIA,eAAeE,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Line from '../pitch/Line';\nimport DragHandle from './DragHandle';\n\nclass LineEdit extends Component {\n\n\teditHandles(l) {\n\t\tif (!l.isEdit) {\n\t\t\treturn null;\n\t\t}\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<DragHandle id={\"edit-l1-\" + l.id} position={l.p1} />\n\t\t\t\t<DragHandle id={\"edit-l2-\" + l.id} position={l.c1} />\n\t\t\t\t<DragHandle id={\"edit-l3-\" + l.id} position={l.c2} />\n\t\t\t\t<DragHandle id={\"edit-l4-\" + l.id} position={l.p2} />\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n\n\trenderPath(p, key) {\n\t\tconst d = \"M \" + p.p1.x + \" \" + p.p1.y + \" C \" + p.c1.x + \" \" + p.c1.y + \" \" + p.c2.x + \" \" + p.c2.y + \" \" + p.p2.x + \" \" + p.p2.y;\n\t\tconst markerStart = p.arrowStart ? \"url(#arrowStart)\" : \"\";\n\t\tconst markerEnd = p.arrowEnd ? \"url(#arrowEnd)\" : \"\";\n\t\treturn (\n\t\t\t<path key={key} d={d} data-ref={p.id} markerStart={markerStart} markerEnd={markerEnd} />\n\t\t);\n\t}\n\n\trender() {\n\t\tconst l = this.props.line;\n\t\tconst className = (l.dashed ? 'line dashed pc' : 'line pc') + l.color;\n\t\tconst allPaths = l.paths().map((p, index) => this.renderPath(p, index.toString()));\n\t\treturn (\n\t\t\t<g className={className}>\n\t\t\t\t{allPaths}\n\t\t\t\t{this.editHandles(l)}\n\t\t\t</g>\n\t\t);\n\t}\n}\n\nLineEdit.defaultProps = {\n\tline: null\n}\n\nLineEdit.propTypes = {\n\tline: PropTypes.instanceOf(Line)\n}\n\nexport default LineEdit;"]},"metadata":{},"sourceType":"module"}