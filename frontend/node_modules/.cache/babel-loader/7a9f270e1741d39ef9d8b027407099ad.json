{"ast":null,"code":"/* FileSaver.js\n * A saveAs() FileSaver implementation.\n * 1.1.20160328\n *\n * By Eli Grey, http://eligrey.com\n * License: MIT\n *   See https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md\n */\n\n/*global self */\n\n/*jslint bitwise: true, indent: 4, laxbreak: true, laxcomma: true, smarttabs: true, plusplus: true */\n\n/*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */\nvar saveAs = saveAs || function (view) {\n  \"use strict\"; // IE <10 is explicitly unsupported\n\n  if (typeof navigator !== \"undefined\" && /MSIE [1-9]\\./.test(navigator.userAgent)) {\n    return;\n  }\n\n  var doc = view.document // only get URL when necessary in case Blob.js hasn't overridden it yet\n  ,\n      get_URL = function () {\n    return view.URL || view.webkitURL || view;\n  },\n      save_link = doc.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\"),\n      can_use_save_link = (\"download\" in save_link),\n      click = function (node) {\n    var event = new MouseEvent(\"click\");\n    node.dispatchEvent(event);\n  },\n      is_safari = /Version\\/[\\d\\.]+.*Safari/.test(navigator.userAgent),\n      webkit_req_fs = view.webkitRequestFileSystem,\n      req_fs = view.requestFileSystem || webkit_req_fs || view.mozRequestFileSystem,\n      throw_outside = function (ex) {\n    (view.setImmediate || view.setTimeout)(function () {\n      throw ex;\n    }, 0);\n  },\n      force_saveable_type = \"application/octet-stream\",\n      fs_min_size = 0 // the Blob API is fundamentally broken as there is no \"downloadfinished\" event to subscribe to\n  ,\n      arbitrary_revoke_timeout = 1000 * 40 // in ms\n  ,\n      revoke = function (file) {\n    var revoker = function () {\n      if (typeof file === \"string\") {\n        // file is an object URL\n        get_URL().revokeObjectURL(file);\n      } else {\n        // file is a File\n        file.remove();\n      }\n    };\n    /* // Take note W3C:\n    var\n      uri = typeof file === \"string\" ? file : file.toURL()\n    , revoker = function(evt) {\n    \t// idealy DownloadFinishedEvent.data would be the URL requested\n    \tif (evt.data === uri) {\n    \t\tif (typeof file === \"string\") { // file is an object URL\n    \t\t\tget_URL().revokeObjectURL(file);\n    \t\t} else { // file is a File\n    \t\t\tfile.remove();\n    \t\t}\n    \t}\n    }\n    ;\n    view.addEventListener(\"downloadfinished\", revoker);\n    */\n\n\n    setTimeout(revoker, arbitrary_revoke_timeout);\n  },\n      dispatch = function (filesaver, event_types, event) {\n    event_types = [].concat(event_types);\n    var i = event_types.length;\n\n    while (i--) {\n      var listener = filesaver[\"on\" + event_types[i]];\n\n      if (typeof listener === \"function\") {\n        try {\n          listener.call(filesaver, event || filesaver);\n        } catch (ex) {\n          throw_outside(ex);\n        }\n      }\n    }\n  },\n      auto_bom = function (blob) {\n    // prepend BOM for UTF-8 XML and text/* types (including HTML)\n    if (/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n      return new Blob([\"\\ufeff\", blob], {\n        type: blob.type\n      });\n    }\n\n    return blob;\n  },\n      FileSaver = function (blob, name, no_auto_bom) {\n    if (!no_auto_bom) {\n      blob = auto_bom(blob);\n    } // First try a.download, then web filesystem, then object URLs\n\n\n    var filesaver = this,\n        type = blob.type,\n        blob_changed = false,\n        object_url,\n        target_view,\n        dispatch_all = function () {\n      dispatch(filesaver, \"writestart progress write writeend\".split(\" \"));\n    } // on any filesys errors revert to saving with object URLs\n    ,\n        fs_error = function () {\n      if (target_view && is_safari && typeof FileReader !== \"undefined\") {\n        // Safari doesn't allow downloading of blob urls\n        var reader = new FileReader();\n\n        reader.onloadend = function () {\n          var base64Data = reader.result;\n          target_view.location.href = \"data:attachment/file\" + base64Data.slice(base64Data.search(/[,;]/));\n          filesaver.readyState = filesaver.DONE;\n          dispatch_all();\n        };\n\n        reader.readAsDataURL(blob);\n        filesaver.readyState = filesaver.INIT;\n        return;\n      } // don't create more object URLs than needed\n\n\n      if (blob_changed || !object_url) {\n        object_url = get_URL().createObjectURL(blob);\n      }\n\n      if (target_view) {\n        target_view.location.href = object_url;\n      } else {\n        var new_tab = view.open(object_url, \"_blank\");\n\n        if (new_tab === undefined && is_safari) {\n          //Apple do not allow window.open, see http://bit.ly/1kZffRI\n          view.location.href = object_url;\n        }\n      }\n\n      filesaver.readyState = filesaver.DONE;\n      dispatch_all();\n      revoke(object_url);\n    },\n        abortable = function (func) {\n      return function () {\n        if (filesaver.readyState !== filesaver.DONE) {\n          return func.apply(this, arguments);\n        }\n      };\n    },\n        create_if_not_found = {\n      create: true,\n      exclusive: false\n    },\n        slice;\n\n    filesaver.readyState = filesaver.INIT;\n\n    if (!name) {\n      name = \"download\";\n    }\n\n    if (can_use_save_link) {\n      object_url = get_URL().createObjectURL(blob);\n      setTimeout(function () {\n        save_link.href = object_url;\n        save_link.download = name;\n        click(save_link);\n        dispatch_all();\n        revoke(object_url);\n        filesaver.readyState = filesaver.DONE;\n      });\n      return;\n    } // Object and web filesystem URLs have a problem saving in Google Chrome when\n    // viewed in a tab, so I force save with application/octet-stream\n    // http://code.google.com/p/chromium/issues/detail?id=91158\n    // Update: Google errantly closed 91158, I submitted it again:\n    // https://code.google.com/p/chromium/issues/detail?id=389642\n\n\n    if (view.chrome && type && type !== force_saveable_type) {\n      slice = blob.slice || blob.webkitSlice;\n      blob = slice.call(blob, 0, blob.size, force_saveable_type);\n      blob_changed = true;\n    } // Since I can't be sure that the guessed media type will trigger a download\n    // in WebKit, I append .download to the filename.\n    // https://bugs.webkit.org/show_bug.cgi?id=65440\n\n\n    if (webkit_req_fs && name !== \"download\") {\n      name += \".download\";\n    }\n\n    if (type === force_saveable_type || webkit_req_fs) {\n      target_view = view;\n    }\n\n    if (!req_fs) {\n      fs_error();\n      return;\n    }\n\n    fs_min_size += blob.size;\n    req_fs(view.TEMPORARY, fs_min_size, abortable(function (fs) {\n      fs.root.getDirectory(\"saved\", create_if_not_found, abortable(function (dir) {\n        var save = function () {\n          dir.getFile(name, create_if_not_found, abortable(function (file) {\n            file.createWriter(abortable(function (writer) {\n              writer.onwriteend = function (event) {\n                target_view.location.href = file.toURL();\n                filesaver.readyState = filesaver.DONE;\n                dispatch(filesaver, \"writeend\", event);\n                revoke(file);\n              };\n\n              writer.onerror = function () {\n                var error = writer.error;\n\n                if (error.code !== error.ABORT_ERR) {\n                  fs_error();\n                }\n              };\n\n              \"writestart progress write abort\".split(\" \").forEach(function (event) {\n                writer[\"on\" + event] = filesaver[\"on\" + event];\n              });\n              writer.write(blob);\n\n              filesaver.abort = function () {\n                writer.abort();\n                filesaver.readyState = filesaver.DONE;\n              };\n\n              filesaver.readyState = filesaver.WRITING;\n            }), fs_error);\n          }), fs_error);\n        };\n\n        dir.getFile(name, {\n          create: false\n        }, abortable(function (file) {\n          // delete file if it already exists\n          file.remove();\n          save();\n        }), abortable(function (ex) {\n          if (ex.code === ex.NOT_FOUND_ERR) {\n            save();\n          } else {\n            fs_error();\n          }\n        }));\n      }), fs_error);\n    }), fs_error);\n  },\n      FS_proto = FileSaver.prototype,\n      saveAs = function (blob, name, no_auto_bom) {\n    return new FileSaver(blob, name, no_auto_bom);\n  }; // IE 10+ (native saveAs)\n\n\n  if (typeof navigator !== \"undefined\" && navigator.msSaveOrOpenBlob) {\n    return function (blob, name, no_auto_bom) {\n      if (!no_auto_bom) {\n        blob = auto_bom(blob);\n      }\n\n      return navigator.msSaveOrOpenBlob(blob, name || \"download\");\n    };\n  }\n\n  FS_proto.abort = function () {\n    var filesaver = this;\n    filesaver.readyState = filesaver.DONE;\n    dispatch(filesaver, \"abort\");\n  };\n\n  FS_proto.readyState = FS_proto.INIT = 0;\n  FS_proto.WRITING = 1;\n  FS_proto.DONE = 2;\n  FS_proto.error = FS_proto.onwritestart = FS_proto.onprogress = FS_proto.onwrite = FS_proto.onabort = FS_proto.onerror = FS_proto.onwriteend = null;\n  return saveAs;\n}(typeof self !== \"undefined\" && self || typeof window !== \"undefined\" && window || this.content); // `self` is undefined in Firefox for Android content script context\n// while `this` is nsIContentFrameMessageManager\n// with an attribute `content` that corresponds to the window\n\n\nif (typeof module !== \"undefined\" && module.exports) {\n  module.exports.saveAs = saveAs;\n} else if (typeof define !== \"undefined\" && define !== null && define.amd !== null) {\n  define([], function () {\n    return saveAs;\n  });\n}","map":{"version":3,"sources":["/home/fsat/repos/tactics-board/node_modules/browser-filesaver/FileSaver.js"],"names":["saveAs","view","navigator","test","userAgent","doc","document","get_URL","URL","webkitURL","save_link","createElementNS","can_use_save_link","click","node","event","MouseEvent","dispatchEvent","is_safari","webkit_req_fs","webkitRequestFileSystem","req_fs","requestFileSystem","mozRequestFileSystem","throw_outside","ex","setImmediate","setTimeout","force_saveable_type","fs_min_size","arbitrary_revoke_timeout","revoke","file","revoker","revokeObjectURL","remove","dispatch","filesaver","event_types","concat","i","length","listener","call","auto_bom","blob","type","Blob","FileSaver","name","no_auto_bom","blob_changed","object_url","target_view","dispatch_all","split","fs_error","FileReader","reader","onloadend","base64Data","result","location","href","slice","search","readyState","DONE","readAsDataURL","INIT","createObjectURL","new_tab","open","undefined","abortable","func","apply","arguments","create_if_not_found","create","exclusive","download","chrome","webkitSlice","size","TEMPORARY","fs","root","getDirectory","dir","save","getFile","createWriter","writer","onwriteend","toURL","onerror","error","code","ABORT_ERR","forEach","write","abort","WRITING","NOT_FOUND_ERR","FS_proto","prototype","msSaveOrOpenBlob","onwritestart","onprogress","onwrite","onabort","self","window","content","module","exports","define","amd"],"mappings":"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","sourcesContent":["/* FileSaver.js\n * A saveAs() FileSaver implementation.\n * 1.1.20160328\n *\n * By Eli Grey, http://eligrey.com\n * License: MIT\n *   See https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md\n */\n\n/*global self */\n/*jslint bitwise: true, indent: 4, laxbreak: true, laxcomma: true, smarttabs: true, plusplus: true */\n\n/*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */\n\nvar saveAs = saveAs || (function(view) {\n\t\"use strict\";\n\t// IE <10 is explicitly unsupported\n\tif (typeof navigator !== \"undefined\" && /MSIE [1-9]\\./.test(navigator.userAgent)) {\n\t\treturn;\n\t}\n\tvar\n\t\t  doc = view.document\n\t\t  // only get URL when necessary in case Blob.js hasn't overridden it yet\n\t\t, get_URL = function() {\n\t\t\treturn view.URL || view.webkitURL || view;\n\t\t}\n\t\t, save_link = doc.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\")\n\t\t, can_use_save_link = \"download\" in save_link\n\t\t, click = function(node) {\n\t\t\tvar event = new MouseEvent(\"click\");\n\t\t\tnode.dispatchEvent(event);\n\t\t}\n\t\t, is_safari = /Version\\/[\\d\\.]+.*Safari/.test(navigator.userAgent)\n\t\t, webkit_req_fs = view.webkitRequestFileSystem\n\t\t, req_fs = view.requestFileSystem || webkit_req_fs || view.mozRequestFileSystem\n\t\t, throw_outside = function(ex) {\n\t\t\t(view.setImmediate || view.setTimeout)(function() {\n\t\t\t\tthrow ex;\n\t\t\t}, 0);\n\t\t}\n\t\t, force_saveable_type = \"application/octet-stream\"\n\t\t, fs_min_size = 0\n\t\t// the Blob API is fundamentally broken as there is no \"downloadfinished\" event to subscribe to\n\t\t, arbitrary_revoke_timeout = 1000 * 40 // in ms\n\t\t, revoke = function(file) {\n\t\t\tvar revoker = function() {\n\t\t\t\tif (typeof file === \"string\") { // file is an object URL\n\t\t\t\t\tget_URL().revokeObjectURL(file);\n\t\t\t\t} else { // file is a File\n\t\t\t\t\tfile.remove();\n\t\t\t\t}\n\t\t\t};\n\t\t\t/* // Take note W3C:\n\t\t\tvar\n\t\t\t  uri = typeof file === \"string\" ? file : file.toURL()\n\t\t\t, revoker = function(evt) {\n\t\t\t\t// idealy DownloadFinishedEvent.data would be the URL requested\n\t\t\t\tif (evt.data === uri) {\n\t\t\t\t\tif (typeof file === \"string\") { // file is an object URL\n\t\t\t\t\t\tget_URL().revokeObjectURL(file);\n\t\t\t\t\t} else { // file is a File\n\t\t\t\t\t\tfile.remove();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t;\n\t\t\tview.addEventListener(\"downloadfinished\", revoker);\n\t\t\t*/\n\t\t\tsetTimeout(revoker, arbitrary_revoke_timeout);\n\t\t}\n\t\t, dispatch = function(filesaver, event_types, event) {\n\t\t\tevent_types = [].concat(event_types);\n\t\t\tvar i = event_types.length;\n\t\t\twhile (i--) {\n\t\t\t\tvar listener = filesaver[\"on\" + event_types[i]];\n\t\t\t\tif (typeof listener === \"function\") {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlistener.call(filesaver, event || filesaver);\n\t\t\t\t\t} catch (ex) {\n\t\t\t\t\t\tthrow_outside(ex);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t, auto_bom = function(blob) {\n\t\t\t// prepend BOM for UTF-8 XML and text/* types (including HTML)\n\t\t\tif (/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n\t\t\t\treturn new Blob([\"\\ufeff\", blob], {type: blob.type});\n\t\t\t}\n\t\t\treturn blob;\n\t\t}\n\t\t, FileSaver = function(blob, name, no_auto_bom) {\n\t\t\tif (!no_auto_bom) {\n\t\t\t\tblob = auto_bom(blob);\n\t\t\t}\n\t\t\t// First try a.download, then web filesystem, then object URLs\n\t\t\tvar\n\t\t\t\t  filesaver = this\n\t\t\t\t, type = blob.type\n\t\t\t\t, blob_changed = false\n\t\t\t\t, object_url\n\t\t\t\t, target_view\n\t\t\t\t, dispatch_all = function() {\n\t\t\t\t\tdispatch(filesaver, \"writestart progress write writeend\".split(\" \"));\n\t\t\t\t}\n\t\t\t\t// on any filesys errors revert to saving with object URLs\n\t\t\t\t, fs_error = function() {\n\t\t\t\t\tif (target_view && is_safari && typeof FileReader !== \"undefined\") {\n\t\t\t\t\t\t// Safari doesn't allow downloading of blob urls\n\t\t\t\t\t\tvar reader = new FileReader();\n\t\t\t\t\t\treader.onloadend = function() {\n\t\t\t\t\t\t\tvar base64Data = reader.result;\n\t\t\t\t\t\t\ttarget_view.location.href = \"data:attachment/file\" + base64Data.slice(base64Data.search(/[,;]/));\n\t\t\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\t\t\tdispatch_all();\n\t\t\t\t\t\t};\n\t\t\t\t\t\treader.readAsDataURL(blob);\n\t\t\t\t\t\tfilesaver.readyState = filesaver.INIT;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t// don't create more object URLs than needed\n\t\t\t\t\tif (blob_changed || !object_url) {\n\t\t\t\t\t\tobject_url = get_URL().createObjectURL(blob);\n\t\t\t\t\t}\n\t\t\t\t\tif (target_view) {\n\t\t\t\t\t\ttarget_view.location.href = object_url;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar new_tab = view.open(object_url, \"_blank\");\n\t\t\t\t\t\tif (new_tab === undefined && is_safari) {\n\t\t\t\t\t\t\t//Apple do not allow window.open, see http://bit.ly/1kZffRI\n\t\t\t\t\t\t\tview.location.href = object_url\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\tdispatch_all();\n\t\t\t\t\trevoke(object_url);\n\t\t\t\t}\n\t\t\t\t, abortable = function(func) {\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\tif (filesaver.readyState !== filesaver.DONE) {\n\t\t\t\t\t\t\treturn func.apply(this, arguments);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\t, create_if_not_found = {create: true, exclusive: false}\n\t\t\t\t, slice\n\t\t\t;\n\t\t\tfilesaver.readyState = filesaver.INIT;\n\t\t\tif (!name) {\n\t\t\t\tname = \"download\";\n\t\t\t}\n\t\t\tif (can_use_save_link) {\n\t\t\t\tobject_url = get_URL().createObjectURL(blob);\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tsave_link.href = object_url;\n\t\t\t\t\tsave_link.download = name;\n\t\t\t\t\tclick(save_link);\n\t\t\t\t\tdispatch_all();\n\t\t\t\t\trevoke(object_url);\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Object and web filesystem URLs have a problem saving in Google Chrome when\n\t\t\t// viewed in a tab, so I force save with application/octet-stream\n\t\t\t// http://code.google.com/p/chromium/issues/detail?id=91158\n\t\t\t// Update: Google errantly closed 91158, I submitted it again:\n\t\t\t// https://code.google.com/p/chromium/issues/detail?id=389642\n\t\t\tif (view.chrome && type && type !== force_saveable_type) {\n\t\t\t\tslice = blob.slice || blob.webkitSlice;\n\t\t\t\tblob = slice.call(blob, 0, blob.size, force_saveable_type);\n\t\t\t\tblob_changed = true;\n\t\t\t}\n\t\t\t// Since I can't be sure that the guessed media type will trigger a download\n\t\t\t// in WebKit, I append .download to the filename.\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=65440\n\t\t\tif (webkit_req_fs && name !== \"download\") {\n\t\t\t\tname += \".download\";\n\t\t\t}\n\t\t\tif (type === force_saveable_type || webkit_req_fs) {\n\t\t\t\ttarget_view = view;\n\t\t\t}\n\t\t\tif (!req_fs) {\n\t\t\t\tfs_error();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tfs_min_size += blob.size;\n\t\t\treq_fs(view.TEMPORARY, fs_min_size, abortable(function(fs) {\n\t\t\t\tfs.root.getDirectory(\"saved\", create_if_not_found, abortable(function(dir) {\n\t\t\t\t\tvar save = function() {\n\t\t\t\t\t\tdir.getFile(name, create_if_not_found, abortable(function(file) {\n\t\t\t\t\t\t\tfile.createWriter(abortable(function(writer) {\n\t\t\t\t\t\t\t\twriter.onwriteend = function(event) {\n\t\t\t\t\t\t\t\t\ttarget_view.location.href = file.toURL();\n\t\t\t\t\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\t\t\t\t\tdispatch(filesaver, \"writeend\", event);\n\t\t\t\t\t\t\t\t\trevoke(file);\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\twriter.onerror = function() {\n\t\t\t\t\t\t\t\t\tvar error = writer.error;\n\t\t\t\t\t\t\t\t\tif (error.code !== error.ABORT_ERR) {\n\t\t\t\t\t\t\t\t\t\tfs_error();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\"writestart progress write abort\".split(\" \").forEach(function(event) {\n\t\t\t\t\t\t\t\t\twriter[\"on\" + event] = filesaver[\"on\" + event];\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\twriter.write(blob);\n\t\t\t\t\t\t\t\tfilesaver.abort = function() {\n\t\t\t\t\t\t\t\t\twriter.abort();\n\t\t\t\t\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tfilesaver.readyState = filesaver.WRITING;\n\t\t\t\t\t\t\t}), fs_error);\n\t\t\t\t\t\t}), fs_error);\n\t\t\t\t\t};\n\t\t\t\t\tdir.getFile(name, {create: false}, abortable(function(file) {\n\t\t\t\t\t\t// delete file if it already exists\n\t\t\t\t\t\tfile.remove();\n\t\t\t\t\t\tsave();\n\t\t\t\t\t}), abortable(function(ex) {\n\t\t\t\t\t\tif (ex.code === ex.NOT_FOUND_ERR) {\n\t\t\t\t\t\t\tsave();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfs_error();\n\t\t\t\t\t\t}\n\t\t\t\t\t}));\n\t\t\t\t}), fs_error);\n\t\t\t}), fs_error);\n\t\t}\n\t\t, FS_proto = FileSaver.prototype\n\t\t, saveAs = function(blob, name, no_auto_bom) {\n\t\t\treturn new FileSaver(blob, name, no_auto_bom);\n\t\t}\n\t;\n\t// IE 10+ (native saveAs)\n\tif (typeof navigator !== \"undefined\" && navigator.msSaveOrOpenBlob) {\n\t\treturn function(blob, name, no_auto_bom) {\n\t\t\tif (!no_auto_bom) {\n\t\t\t\tblob = auto_bom(blob);\n\t\t\t}\n\t\t\treturn navigator.msSaveOrOpenBlob(blob, name || \"download\");\n\t\t};\n\t}\n\n\tFS_proto.abort = function() {\n\t\tvar filesaver = this;\n\t\tfilesaver.readyState = filesaver.DONE;\n\t\tdispatch(filesaver, \"abort\");\n\t};\n\tFS_proto.readyState = FS_proto.INIT = 0;\n\tFS_proto.WRITING = 1;\n\tFS_proto.DONE = 2;\n\n\tFS_proto.error =\n\tFS_proto.onwritestart =\n\tFS_proto.onprogress =\n\tFS_proto.onwrite =\n\tFS_proto.onabort =\n\tFS_proto.onerror =\n\tFS_proto.onwriteend =\n\t\tnull;\n\n\treturn saveAs;\n}(\n\t   typeof self !== \"undefined\" && self\n\t|| typeof window !== \"undefined\" && window\n\t|| this.content\n));\n// `self` is undefined in Firefox for Android content script context\n// while `this` is nsIContentFrameMessageManager\n// with an attribute `content` that corresponds to the window\n\nif (typeof module !== \"undefined\" && module.exports) {\n  module.exports.saveAs = saveAs;\n} else if ((typeof define !== \"undefined\" && define !== null) && (define.amd !== null)) {\n  define([], function() {\n    return saveAs;\n  });\n}\n"]},"metadata":{},"sourceType":"script"}